{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/wave';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nconst _c0 = [\"switchElement\"];\n\nfunction NzSwitchComponent_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzSwitchComponent_ng_container_5_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.nzUnCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzSwitchComponent_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzUnCheckedChildren);\n  }\n}\n\nconst NZ_CONFIG_MODULE_NAME = 'switch';\n\nclass NzSwitchComponent {\n  constructor(nzConfigService, host, ngZone, cdr, focusMonitor, directionality) {\n    this.nzConfigService = nzConfigService;\n    this.host = host;\n    this.ngZone = ngZone;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.directionality = directionality;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.isChecked = false;\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n\n    this.nzLoading = false;\n    this.nzDisabled = false;\n    this.nzControl = false;\n    this.nzCheckedChildren = null;\n    this.nzUnCheckedChildren = null;\n    this.nzSize = 'default';\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n  }\n\n  updateValue(value) {\n    if (this.isChecked !== value) {\n      this.isChecked = value;\n      this.onChange(this.isChecked);\n    }\n  }\n\n  focus() {\n    this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n  }\n\n  blur() {\n    this.switchElement.nativeElement.blur();\n  }\n\n  ngOnInit() {\n    this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.ngZone.runOutsideAngular(() => {\n      fromEvent(this.host.nativeElement, 'click').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        event.preventDefault();\n\n        if (this.nzControl || this.nzDisabled || this.nzLoading) {\n          return;\n        }\n\n        this.ngZone.run(() => {\n          this.updateValue(!this.isChecked);\n          this.cdr.markForCheck();\n        });\n      });\n      fromEvent(this.switchElement.nativeElement, 'keydown').pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (this.nzControl || this.nzDisabled || this.nzLoading) {\n          return;\n        }\n\n        const {\n          keyCode\n        } = event;\n\n        if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\n          return;\n        }\n\n        event.preventDefault();\n        this.ngZone.run(() => {\n          if (keyCode === LEFT_ARROW) {\n            this.updateValue(false);\n          } else if (keyCode === RIGHT_ARROW) {\n            this.updateValue(true);\n          } else if (keyCode === SPACE || keyCode === ENTER) {\n            this.updateValue(!this.isChecked);\n          }\n\n          this.cdr.markForCheck();\n        });\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.focusMonitor.monitor(this.switchElement.nativeElement, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        /** https://github.com/angular/angular/issues/17793 **/\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value) {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n\n}\n\nNzSwitchComponent.ɵfac = function NzSwitchComponent_Factory(t) {\n  return new (t || NzSwitchComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Directionality, 8));\n};\n\nNzSwitchComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSwitchComponent,\n  selectors: [[\"nz-switch\"]],\n  viewQuery: function NzSwitchComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switchElement = _t.first);\n    }\n  },\n  inputs: {\n    nzLoading: \"nzLoading\",\n    nzDisabled: \"nzDisabled\",\n    nzControl: \"nzControl\",\n    nzCheckedChildren: \"nzCheckedChildren\",\n    nzUnCheckedChildren: \"nzUnCheckedChildren\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzSwitch\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NzSwitchComponent),\n    multi: true\n  }])],\n  decls: 9,\n  vars: 15,\n  consts: [[\"nz-wave\", \"\", \"type\", \"button\", 1, \"ant-switch\", 3, \"disabled\", \"nzWaveExtraNode\"], [\"switchElement\", \"\"], [1, \"ant-switch-handle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-switch-loading-icon\", 4, \"ngIf\"], [1, \"ant-switch-inner\"], [4, \"ngIf\", \"ngIfElse\"], [\"uncheckTemplate\", \"\"], [1, \"ant-click-animating-node\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-switch-loading-icon\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzSwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1)(2, \"span\", 2);\n      i0.ɵɵtemplate(3, NzSwitchComponent_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\", 4);\n      i0.ɵɵtemplate(5, NzSwitchComponent_ng_container_5_Template, 2, 1, \"ng-container\", 5);\n      i0.ɵɵtemplate(6, NzSwitchComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(7);\n\n      i0.ɵɵclassProp(\"ant-switch-checked\", ctx.isChecked)(\"ant-switch-loading\", ctx.nzLoading)(\"ant-switch-disabled\", ctx.nzDisabled)(\"ant-switch-small\", ctx.nzSize === \"small\")(\"ant-switch-rtl\", ctx.dir === \"rtl\");\n      i0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"nzWaveExtraNode\", true);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isChecked)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [i4.NzWaveDirective, i5.NgIf, i6.NzIconDirective, i7.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean()], NzSwitchComponent.prototype, \"nzControl\", void 0);\n\n__decorate([WithConfig()], NzSwitchComponent.prototype, \"nzSize\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-switch',\n      exportAs: 'nzSwitch',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NzSwitchComponent),\n        multi: true\n      }],\n      template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\n      [nzWaveExtraNode]=\"true\"\n    >\n      <span class=\"ant-switch-handle\">\n        <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      </span>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.FocusMonitor\n    }, {\n      type: i3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    switchElement: [{\n      type: ViewChild,\n      args: ['switchElement', {\n        static: true\n      }]\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzControl: [{\n      type: Input\n    }],\n    nzCheckedChildren: [{\n      type: Input\n    }],\n    nzUnCheckedChildren: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSwitchModule {}\n\nNzSwitchModule.ɵfac = function NzSwitchModule_Factory(t) {\n  return new (t || NzSwitchModule)();\n};\n\nNzSwitchModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSwitchModule\n});\nNzSwitchModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSwitchModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSwitchComponent],\n      declarations: [NzSwitchComponent],\n      imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSwitchComponent, NzSwitchModule };","map":{"version":3,"sources":["/home/ofgha/Documents/PL2/front-end/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-switch.mjs"],"names":["__decorate","LEFT_ARROW","RIGHT_ARROW","SPACE","ENTER","i0","forwardRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","ViewChild","Input","NgModule","NG_VALUE_ACCESSOR","Subject","fromEvent","takeUntil","i1","WithConfig","InputBoolean","i2","i3","BidiModule","i4","NzWaveModule","i5","CommonModule","i6","NzIconModule","i7","NzOutletModule","NZ_CONFIG_MODULE_NAME","NzSwitchComponent","constructor","nzConfigService","host","ngZone","cdr","focusMonitor","directionality","_nzModuleName","isChecked","onChange","onTouched","nzLoading","nzDisabled","nzControl","nzCheckedChildren","nzUnCheckedChildren","nzSize","dir","destroy$","updateValue","value","focus","focusVia","switchElement","nativeElement","blur","ngOnInit","change","pipe","subscribe","direction","detectChanges","runOutsideAngular","event","preventDefault","run","markForCheck","keyCode","ngAfterViewInit","monitor","focusOrigin","Promise","resolve","then","ngOnDestroy","stopMonitoring","next","complete","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","ɵfac","NzConfigService","ElementRef","NgZone","ChangeDetectorRef","FocusMonitor","Directionality","ɵcmp","provide","useExisting","multi","NzWaveDirective","NgIf","NzIconDirective","NzStringTemplateOutletDirective","prototype","type","args","selector","exportAs","preserveWhitespaces","changeDetection","OnPush","encapsulation","None","providers","template","decorators","static","NzSwitchModule","ɵmod","ɵinj","exports","declarations","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i4 from 'ng-zorro-antd/core/wave';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i7 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nconst NZ_CONFIG_MODULE_NAME = 'switch';\nclass NzSwitchComponent {\n    constructor(nzConfigService, host, ngZone, cdr, focusMonitor, directionality) {\n        this.nzConfigService = nzConfigService;\n        this.host = host;\n        this.ngZone = ngZone;\n        this.cdr = cdr;\n        this.focusMonitor = focusMonitor;\n        this.directionality = directionality;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.isChecked = false;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n        this.nzLoading = false;\n        this.nzDisabled = false;\n        this.nzControl = false;\n        this.nzCheckedChildren = null;\n        this.nzUnCheckedChildren = null;\n        this.nzSize = 'default';\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n    }\n    updateValue(value) {\n        if (this.isChecked !== value) {\n            this.isChecked = value;\n            this.onChange(this.isChecked);\n        }\n    }\n    focus() {\n        this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\n    }\n    blur() {\n        this.switchElement.nativeElement.blur();\n    }\n    ngOnInit() {\n        this.directionality.change.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.host.nativeElement, 'click')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                event.preventDefault();\n                if (this.nzControl || this.nzDisabled || this.nzLoading) {\n                    return;\n                }\n                this.ngZone.run(() => {\n                    this.updateValue(!this.isChecked);\n                    this.cdr.markForCheck();\n                });\n            });\n            fromEvent(this.switchElement.nativeElement, 'keydown')\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(event => {\n                if (this.nzControl || this.nzDisabled || this.nzLoading) {\n                    return;\n                }\n                const { keyCode } = event;\n                if (keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== SPACE && keyCode !== ENTER) {\n                    return;\n                }\n                event.preventDefault();\n                this.ngZone.run(() => {\n                    if (keyCode === LEFT_ARROW) {\n                        this.updateValue(false);\n                    }\n                    else if (keyCode === RIGHT_ARROW) {\n                        this.updateValue(true);\n                    }\n                    else if (keyCode === SPACE || keyCode === ENTER) {\n                        this.updateValue(!this.isChecked);\n                    }\n                    this.cdr.markForCheck();\n                });\n            });\n        });\n    }\n    ngAfterViewInit() {\n        this.focusMonitor\n            .monitor(this.switchElement.nativeElement, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                /** https://github.com/angular/angular/issues/17793 **/\n                Promise.resolve().then(() => this.onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    writeValue(value) {\n        this.isChecked = value;\n        this.cdr.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this.nzDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n}\nNzSwitchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i2.FocusMonitor }, { token: i3.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzSwitchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzSwitchComponent, selector: \"nz-switch\", inputs: { nzLoading: \"nzLoading\", nzDisabled: \"nzDisabled\", nzControl: \"nzControl\", nzCheckedChildren: \"nzCheckedChildren\", nzUnCheckedChildren: \"nzUnCheckedChildren\", nzSize: \"nzSize\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NzSwitchComponent),\n            multi: true\n        }\n    ], viewQueries: [{ propertyName: \"switchElement\", first: true, predicate: [\"switchElement\"], descendants: true, static: true }], exportAs: [\"nzSwitch\"], ngImport: i0, template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\n      [nzWaveExtraNode]=\"true\"\n    >\n      <span class=\"ant-switch-handle\">\n        <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      </span>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `, isInline: true, directives: [{ type: i4.NzWaveDirective, selector: \"[nz-wave],button[nz-button]:not([nzType=\\\"link\\\"]):not([nzType=\\\"text\\\"])\", inputs: [\"nzWaveExtraNode\"], exportAs: [\"nzWave\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i7.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzSwitchComponent.prototype, \"nzLoading\", void 0);\n__decorate([\n    InputBoolean()\n], NzSwitchComponent.prototype, \"nzDisabled\", void 0);\n__decorate([\n    InputBoolean()\n], NzSwitchComponent.prototype, \"nzControl\", void 0);\n__decorate([\n    WithConfig()\n], NzSwitchComponent.prototype, \"nzSize\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-switch',\n                    exportAs: 'nzSwitch',\n                    preserveWhitespaces: false,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NzSwitchComponent),\n                            multi: true\n                        }\n                    ],\n                    template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [class.ant-switch-rtl]=\"dir === 'rtl'\"\n      [nzWaveExtraNode]=\"true\"\n    >\n      <span class=\"ant-switch-handle\">\n        <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      </span>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.NzConfigService }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i2.FocusMonitor }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { switchElement: [{\n                type: ViewChild,\n                args: ['switchElement', { static: true }]\n            }], nzLoading: [{\n                type: Input\n            }], nzDisabled: [{\n                type: Input\n            }], nzControl: [{\n                type: Input\n            }], nzCheckedChildren: [{\n                type: Input\n            }], nzUnCheckedChildren: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSwitchModule {\n}\nNzSwitchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzSwitchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchModule, declarations: [NzSwitchComponent], imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule], exports: [NzSwitchComponent] });\nNzSwitchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchModule, imports: [[BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSwitchModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [NzSwitchComponent],\n                    declarations: [NzSwitchComponent],\n                    imports: [BidiModule, CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSwitchComponent, NzSwitchModule };\n"]},"metadata":{},"sourceType":"module"}