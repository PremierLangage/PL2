{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i1 from '@angular/cdk/overlay';\nimport { ConnectionPositionPair, CdkOverlayOrigin } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nconst POSITION_MAP = {\n  top: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'top'\n  }, {\n    overlayX: 'center',\n    overlayY: 'bottom'\n  }),\n  topLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  topRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  }),\n  right: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'center'\n  }, {\n    overlayX: 'start',\n    overlayY: 'center'\n  }),\n  rightTop: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'top'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  rightBottom: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }),\n  bottom: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomCenter: new ConnectionPositionPair({\n    originX: 'center',\n    originY: 'bottom'\n  }, {\n    overlayX: 'center',\n    overlayY: 'top'\n  }),\n  bottomLeft: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'start',\n    overlayY: 'top'\n  }),\n  bottomRight: new ConnectionPositionPair({\n    originX: 'end',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  left: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'center'\n  }, {\n    overlayX: 'end',\n    overlayY: 'center'\n  }),\n  leftTop: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'top'\n  }, {\n    overlayX: 'end',\n    overlayY: 'top'\n  }),\n  leftBottom: new ConnectionPositionPair({\n    originX: 'start',\n    originY: 'bottom'\n  }, {\n    overlayX: 'end',\n    overlayY: 'bottom'\n  })\n};\nconst DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\nconst DEFAULT_CASCADER_POSITIONS = [POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight, POSITION_MAP.topLeft, POSITION_MAP.topRight, POSITION_MAP.topCenter, POSITION_MAP.bottomCenter];\nconst DEFAULT_MENTION_TOP_POSITIONS = [new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'start',\n  overlayY: 'bottom'\n}), new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'bottom'\n})];\nconst DEFAULT_MENTION_BOTTOM_POSITIONS = [POSITION_MAP.bottomLeft, new ConnectionPositionPair({\n  originX: 'start',\n  originY: 'bottom'\n}, {\n  overlayX: 'end',\n  overlayY: 'top'\n})];\n\nfunction getPlacementName(position) {\n  for (const placement in POSITION_MAP) {\n    if (position.connectionPair.originX === POSITION_MAP[placement].originX && position.connectionPair.originY === POSITION_MAP[placement].originY && position.connectionPair.overlayX === POSITION_MAP[placement].overlayX && position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\n      return placement;\n    }\n  }\n\n  return undefined;\n}\n\nclass NzConnectedOverlayDirective {\n  constructor(cdkConnectedOverlay, nzDestroyService) {\n    this.cdkConnectedOverlay = cdkConnectedOverlay;\n    this.nzDestroyService = nzDestroyService;\n    this.nzArrowPointAtCenter = false;\n    this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n    this.cdkConnectedOverlay.positionChange.pipe(takeUntil(this.nzDestroyService)).subscribe(position => {\n      if (this.nzArrowPointAtCenter) {\n        this.updateArrowPosition(position);\n      }\n    });\n  }\n\n  updateArrowPosition(position) {\n    const originRect = this.getOriginRect();\n    const placement = getPlacementName(position);\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (placement === 'topLeft' || placement === 'bottomLeft') {\n      offsetX = originRect.width / 2 - 14;\n    } else if (placement === 'topRight' || placement === 'bottomRight') {\n      offsetX = -(originRect.width / 2 - 14);\n    } else if (placement === 'leftTop' || placement === 'rightTop') {\n      offsetY = originRect.height / 2 - 10;\n    } else if (placement === 'leftBottom' || placement === 'rightBottom') {\n      offsetY = -(originRect.height / 2 - 10);\n    }\n\n    if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\n      this.cdkConnectedOverlay.offsetY = offsetY;\n      this.cdkConnectedOverlay.offsetX = offsetX;\n      this.cdkConnectedOverlay.overlayRef.updatePosition();\n    }\n  }\n\n  getFlexibleConnectedPositionStrategyOrigin() {\n    if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\n      return this.cdkConnectedOverlay.origin.elementRef;\n    } else {\n      return this.cdkConnectedOverlay.origin;\n    }\n  }\n\n  getOriginRect() {\n    const origin = this.getFlexibleConnectedPositionStrategyOrigin();\n\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    } // Check for Element so SVG elements are also supported.\n\n\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n\n    const width = origin.width || 0;\n    const height = origin.height || 0; // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n\n}\n\nNzConnectedOverlayDirective.ɵfac = function NzConnectedOverlayDirective_Factory(t) {\n  return new (t || NzConnectedOverlayDirective)(i0.ɵɵdirectiveInject(i1.CdkConnectedOverlay), i0.ɵɵdirectiveInject(i2.NzDestroyService));\n};\n\nNzConnectedOverlayDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzConnectedOverlayDirective,\n  selectors: [[\"\", \"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\"]],\n  inputs: {\n    nzArrowPointAtCenter: \"nzArrowPointAtCenter\"\n  },\n  exportAs: [\"nzConnectedOverlay\"],\n  features: [i0.ɵɵProvidersFeature([NzDestroyService])]\n});\n\n__decorate([InputBoolean()], NzConnectedOverlayDirective.prototype, \"nzArrowPointAtCenter\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzConnectedOverlayDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n      exportAs: 'nzConnectedOverlay',\n      providers: [NzDestroyService]\n    }]\n  }], function () {\n    return [{\n      type: i1.CdkConnectedOverlay\n    }, {\n      type: i2.NzDestroyService\n    }];\n  }, {\n    nzArrowPointAtCenter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzOverlayModule {}\n\nNzOverlayModule.ɵfac = function NzOverlayModule_Factory(t) {\n  return new (t || NzOverlayModule)();\n};\n\nNzOverlayModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzOverlayModule\n});\nNzOverlayModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzOverlayModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzConnectedOverlayDirective],\n      exports: [NzConnectedOverlayDirective]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_CASCADER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, NzConnectedOverlayDirective, NzOverlayModule, POSITION_MAP, getPlacementName };","map":{"version":3,"sources":["/home/ofgha/Documents/PL2/front-end/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-core-overlay.mjs"],"names":["__decorate","i1","ConnectionPositionPair","CdkOverlayOrigin","i0","ElementRef","Directive","Input","NgModule","takeUntil","i2","NzDestroyService","InputBoolean","POSITION_MAP","top","originX","originY","overlayX","overlayY","topCenter","topLeft","topRight","right","rightTop","rightBottom","bottom","bottomCenter","bottomLeft","bottomRight","left","leftTop","leftBottom","DEFAULT_TOOLTIP_POSITIONS","DEFAULT_CASCADER_POSITIONS","DEFAULT_MENTION_TOP_POSITIONS","DEFAULT_MENTION_BOTTOM_POSITIONS","getPlacementName","position","placement","connectionPair","undefined","NzConnectedOverlayDirective","constructor","cdkConnectedOverlay","nzDestroyService","nzArrowPointAtCenter","backdropClass","positionChange","pipe","subscribe","updateArrowPosition","originRect","getOriginRect","offsetX","offsetY","width","height","overlayRef","updatePosition","getFlexibleConnectedPositionStrategyOrigin","origin","elementRef","nativeElement","getBoundingClientRect","Element","y","x","ɵfac","CdkConnectedOverlay","ɵdir","prototype","type","args","selector","exportAs","providers","NzOverlayModule","ɵmod","ɵinj","declarations","exports"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,SAASC,sBAAT,EAAiCC,gBAAjC,QAAyD,sBAAzD;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,KAAhC,EAAuCC,QAAvC,QAAuD,eAAvD;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAO,KAAKC,EAAZ,MAAoB,6BAApB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,IAAIZ,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,QAAX;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAA3B,EAAkE;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAlE,CADY;AAEjBC,EAAAA,SAAS,EAAE,IAAIjB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,QAAX;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAA3B,EAAkE;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAAlE,CAFM;AAGjBE,EAAAA,OAAO,EAAE,IAAIlB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAA3B,EAAiE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAAjE,CAHQ;AAIjBG,EAAAA,QAAQ,EAAE,IAAInB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B,EAA+D;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAA/D,CAJO;AAKjBI,EAAAA,KAAK,EAAE,IAAIpB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B,EAAkE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAAlE,CALU;AAMjBK,EAAAA,QAAQ,EAAE,IAAIrB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B,EAA+D;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAA/D,CANO;AAOjBM,EAAAA,WAAW,EAAE,IAAItB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B,EAAkE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAAlE,CAPI;AAQjBO,EAAAA,MAAM,EAAE,IAAIvB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,QAAX;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAA3B,EAAqE;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAArE,CARS;AASjBQ,EAAAA,YAAY,EAAE,IAAIxB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,QAAX;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAA3B,EAAqE;AAAEC,IAAAA,QAAQ,EAAE,QAAZ;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAArE,CATG;AAUjBS,EAAAA,UAAU,EAAE,IAAIzB,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAA3B,EAAoE;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAApE,CAVK;AAWjBU,EAAAA,WAAW,EAAE,IAAI1B,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAA3B,EAAkE;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAAlE,CAXI;AAYjBW,EAAAA,IAAI,EAAE,IAAI3B,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAA3B,EAAoE;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAApE,CAZW;AAajBY,EAAAA,OAAO,EAAE,IAAI5B,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAA3B,EAAiE;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAAjE,CAbQ;AAcjBa,EAAAA,UAAU,EAAE,IAAI7B,sBAAJ,CAA2B;AAAEa,IAAAA,OAAO,EAAE,OAAX;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GAA3B,EAAoE;AAAEC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAApE;AAdK,CAArB;AAgBA,MAAMc,yBAAyB,GAAG,CAACnB,YAAY,CAACC,GAAd,EAAmBD,YAAY,CAACS,KAAhC,EAAuCT,YAAY,CAACY,MAApD,EAA4DZ,YAAY,CAACgB,IAAzE,CAAlC;AACA,MAAMI,0BAA0B,GAAG,CAC/BpB,YAAY,CAACc,UADkB,EAE/Bd,YAAY,CAACe,WAFkB,EAG/Bf,YAAY,CAACO,OAHkB,EAI/BP,YAAY,CAACQ,QAJkB,EAK/BR,YAAY,CAACM,SALkB,EAM/BN,YAAY,CAACa,YANkB,CAAnC;AAQA,MAAMQ,6BAA6B,GAAG,CAClC,IAAIhC,sBAAJ,CAA2B;AAAEa,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,OAAO,EAAE;AAA7B,CAA3B,EAAoE;AAAEC,EAAAA,QAAQ,EAAE,OAAZ;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAApE,CADkC,EAElC,IAAIhB,sBAAJ,CAA2B;AAAEa,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,OAAO,EAAE;AAA7B,CAA3B,EAAoE;AAAEC,EAAAA,QAAQ,EAAE,KAAZ;AAAmBC,EAAAA,QAAQ,EAAE;AAA7B,CAApE,CAFkC,CAAtC;AAIA,MAAMiB,gCAAgC,GAAG,CACrCtB,YAAY,CAACc,UADwB,EAErC,IAAIzB,sBAAJ,CAA2B;AAAEa,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,OAAO,EAAE;AAA7B,CAA3B,EAAoE;AAAEC,EAAAA,QAAQ,EAAE,KAAZ;AAAmBC,EAAAA,QAAQ,EAAE;AAA7B,CAApE,CAFqC,CAAzC;;AAIA,SAASkB,gBAAT,CAA0BC,QAA1B,EAAoC;AAChC,OAAK,MAAMC,SAAX,IAAwBzB,YAAxB,EAAsC;AAClC,QAAIwB,QAAQ,CAACE,cAAT,CAAwBxB,OAAxB,KAAoCF,YAAY,CAACyB,SAAD,CAAZ,CAAwBvB,OAA5D,IACAsB,QAAQ,CAACE,cAAT,CAAwBvB,OAAxB,KAAoCH,YAAY,CAACyB,SAAD,CAAZ,CAAwBtB,OAD5D,IAEAqB,QAAQ,CAACE,cAAT,CAAwBtB,QAAxB,KAAqCJ,YAAY,CAACyB,SAAD,CAAZ,CAAwBrB,QAF7D,IAGAoB,QAAQ,CAACE,cAAT,CAAwBrB,QAAxB,KAAqCL,YAAY,CAACyB,SAAD,CAAZ,CAAwBpB,QAHjE,EAG2E;AACvE,aAAOoB,SAAP;AACH;AACJ;;AACD,SAAOE,SAAP;AACH;;AAED,MAAMC,2BAAN,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,mBAAD,EAAsBC,gBAAtB,EAAwC;AAC/C,SAAKD,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,oBAAL,GAA4B,KAA5B;AACA,SAAKF,mBAAL,CAAyBG,aAAzB,GAAyC,iCAAzC;AACA,SAAKH,mBAAL,CAAyBI,cAAzB,CACKC,IADL,CACUvC,SAAS,CAAC,KAAKmC,gBAAN,CADnB,EAEKK,SAFL,CAEgBZ,QAAD,IAAc;AACzB,UAAI,KAAKQ,oBAAT,EAA+B;AAC3B,aAAKK,mBAAL,CAAyBb,QAAzB;AACH;AACJ,KAND;AAOH;;AACDa,EAAAA,mBAAmB,CAACb,QAAD,EAAW;AAC1B,UAAMc,UAAU,GAAG,KAAKC,aAAL,EAAnB;AACA,UAAMd,SAAS,GAAGF,gBAAgB,CAACC,QAAD,CAAlC;AACA,QAAIgB,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,QAAIhB,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,YAA7C,EAA2D;AACvDe,MAAAA,OAAO,GAAGF,UAAU,CAACI,KAAX,GAAmB,CAAnB,GAAuB,EAAjC;AACH,KAFD,MAGK,IAAIjB,SAAS,KAAK,UAAd,IAA4BA,SAAS,KAAK,aAA9C,EAA6D;AAC9De,MAAAA,OAAO,GAAG,EAAEF,UAAU,CAACI,KAAX,GAAmB,CAAnB,GAAuB,EAAzB,CAAV;AACH,KAFI,MAGA,IAAIjB,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,UAA7C,EAAyD;AAC1DgB,MAAAA,OAAO,GAAGH,UAAU,CAACK,MAAX,GAAoB,CAApB,GAAwB,EAAlC;AACH,KAFI,MAGA,IAAIlB,SAAS,KAAK,YAAd,IAA8BA,SAAS,KAAK,aAAhD,EAA+D;AAChEgB,MAAAA,OAAO,GAAG,EAAEH,UAAU,CAACK,MAAX,GAAoB,CAApB,GAAwB,EAA1B,CAAV;AACH;;AACD,QAAI,KAAKb,mBAAL,CAAyBU,OAAzB,KAAqCA,OAArC,IAAgD,KAAKV,mBAAL,CAAyBW,OAAzB,KAAqCA,OAAzF,EAAkG;AAC9F,WAAKX,mBAAL,CAAyBW,OAAzB,GAAmCA,OAAnC;AACA,WAAKX,mBAAL,CAAyBU,OAAzB,GAAmCA,OAAnC;AACA,WAAKV,mBAAL,CAAyBc,UAAzB,CAAoCC,cAApC;AACH;AACJ;;AACDC,EAAAA,0CAA0C,GAAG;AACzC,QAAI,KAAKhB,mBAAL,CAAyBiB,MAAzB,YAA2CzD,gBAA/C,EAAiE;AAC7D,aAAO,KAAKwC,mBAAL,CAAyBiB,MAAzB,CAAgCC,UAAvC;AACH,KAFD,MAGK;AACD,aAAO,KAAKlB,mBAAL,CAAyBiB,MAAhC;AACH;AACJ;;AACDR,EAAAA,aAAa,GAAG;AACZ,UAAMQ,MAAM,GAAG,KAAKD,0CAAL,EAAf;;AACA,QAAIC,MAAM,YAAYvD,UAAtB,EAAkC;AAC9B,aAAOuD,MAAM,CAACE,aAAP,CAAqBC,qBAArB,EAAP;AACH,KAJW,CAKZ;;;AACA,QAAIH,MAAM,YAAYI,OAAtB,EAA+B;AAC3B,aAAOJ,MAAM,CAACG,qBAAP,EAAP;AACH;;AACD,UAAMR,KAAK,GAAGK,MAAM,CAACL,KAAP,IAAgB,CAA9B;AACA,UAAMC,MAAM,GAAGI,MAAM,CAACJ,MAAP,IAAiB,CAAhC,CAVY,CAWZ;;AACA,WAAO;AACH1C,MAAAA,GAAG,EAAE8C,MAAM,CAACK,CADT;AAEHxC,MAAAA,MAAM,EAAEmC,MAAM,CAACK,CAAP,GAAWT,MAFhB;AAGH3B,MAAAA,IAAI,EAAE+B,MAAM,CAACM,CAHV;AAIH5C,MAAAA,KAAK,EAAEsC,MAAM,CAACM,CAAP,GAAWX,KAJf;AAKHC,MAAAA,MALG;AAMHD,MAAAA;AANG,KAAP;AAQH;;AAjE6B;;AAmElCd,2BAA2B,CAAC0B,IAA5B;AAAA,mBAAyH1B,2BAAzH,EAA+GrC,EAA/G,mBAAsKH,EAAE,CAACmE,mBAAzK,GAA+GhE,EAA/G,mBAAyMM,EAAE,CAACC,gBAA5M;AAAA;;AACA8B,2BAA2B,CAAC4B,IAA5B,kBAD+GjE,EAC/G;AAAA,QAA6GqC,2BAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD+GrC,EAC/G,oBAAsQ,CAACO,gBAAD,CAAtQ;AAAA;;AACAX,UAAU,CAAC,CACPY,YAAY,EADL,CAAD,EAEP6B,2BAA2B,CAAC6B,SAFrB,EAEgC,sBAFhC,EAEwD,KAAK,CAF7D,CAAV;;AAGA;AAAA,qDAL+GlE,EAK/G,mBAA4FqC,2BAA5F,EAAqI,CAAC;AAC1H8B,IAAAA,IAAI,EAAEjE,SADoH;AAE1HkE,IAAAA,IAAI,EAAE,CAAC;AACCC,MAAAA,QAAQ,EAAE,2CADX;AAECC,MAAAA,QAAQ,EAAE,oBAFX;AAGCC,MAAAA,SAAS,EAAE,CAAChE,gBAAD;AAHZ,KAAD;AAFoH,GAAD,CAArI,EAO4B,YAAY;AAAE,WAAO,CAAC;AAAE4D,MAAAA,IAAI,EAAEtE,EAAE,CAACmE;AAAX,KAAD,EAAmC;AAAEG,MAAAA,IAAI,EAAE7D,EAAE,CAACC;AAAX,KAAnC,CAAP;AAA2E,GAPrH,EAOuI;AAAEkC,IAAAA,oBAAoB,EAAE,CAAC;AAChJ0B,MAAAA,IAAI,EAAEhE;AAD0I,KAAD;AAAxB,GAPvI;AAAA;AAWA;AACA;AACA;AACA;;;AACA,MAAMqE,eAAN,CAAsB;;AAEtBA,eAAe,CAACT,IAAhB;AAAA,mBAA6GS,eAA7G;AAAA;;AACAA,eAAe,CAACC,IAAhB,kBAvB+GzE,EAuB/G;AAAA,QAA8GwE;AAA9G;AACAA,eAAe,CAACE,IAAhB,kBAxB+G1E,EAwB/G;;AACA;AAAA,qDAzB+GA,EAyB/G,mBAA4FwE,eAA5F,EAAyH,CAAC;AAC9GL,IAAAA,IAAI,EAAE/D,QADwG;AAE9GgE,IAAAA,IAAI,EAAE,CAAC;AACCO,MAAAA,YAAY,EAAE,CAACtC,2BAAD,CADf;AAECuC,MAAAA,OAAO,EAAE,CAACvC,2BAAD;AAFV,KAAD;AAFwG,GAAD,CAAzH;AAAA;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASR,0BAAT,EAAqCE,gCAArC,EAAuED,6BAAvE,EAAsGF,yBAAtG,EAAiIS,2BAAjI,EAA8JmC,eAA9J,EAA+K/D,YAA/K,EAA6LuB,gBAA7L","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i1 from '@angular/cdk/overlay';\nimport { ConnectionPositionPair, CdkOverlayOrigin } from '@angular/cdk/overlay';\nimport * as i0 from '@angular/core';\nimport { ElementRef, Directive, Input, NgModule } from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2 from 'ng-zorro-antd/core/services';\nimport { NzDestroyService } from 'ng-zorro-antd/core/services';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nconst POSITION_MAP = {\n    top: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n    topCenter: new ConnectionPositionPair({ originX: 'center', originY: 'top' }, { overlayX: 'center', overlayY: 'bottom' }),\n    topLeft: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n    topRight: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' }),\n    right: new ConnectionPositionPair({ originX: 'end', originY: 'center' }, { overlayX: 'start', overlayY: 'center' }),\n    rightTop: new ConnectionPositionPair({ originX: 'end', originY: 'top' }, { overlayX: 'start', overlayY: 'top' }),\n    rightBottom: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n    bottom: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n    bottomCenter: new ConnectionPositionPair({ originX: 'center', originY: 'bottom' }, { overlayX: 'center', overlayY: 'top' }),\n    bottomLeft: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n    bottomRight: new ConnectionPositionPair({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' }),\n    left: new ConnectionPositionPair({ originX: 'start', originY: 'center' }, { overlayX: 'end', overlayY: 'center' }),\n    leftTop: new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'end', overlayY: 'top' }),\n    leftBottom: new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n};\nconst DEFAULT_TOOLTIP_POSITIONS = [POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left];\nconst DEFAULT_CASCADER_POSITIONS = [\n    POSITION_MAP.bottomLeft,\n    POSITION_MAP.bottomRight,\n    POSITION_MAP.topLeft,\n    POSITION_MAP.topRight,\n    POSITION_MAP.topCenter,\n    POSITION_MAP.bottomCenter\n];\nconst DEFAULT_MENTION_TOP_POSITIONS = [\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'bottom' }),\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'bottom' })\n];\nconst DEFAULT_MENTION_BOTTOM_POSITIONS = [\n    POSITION_MAP.bottomLeft,\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n];\nfunction getPlacementName(position) {\n    for (const placement in POSITION_MAP) {\n        if (position.connectionPair.originX === POSITION_MAP[placement].originX &&\n            position.connectionPair.originY === POSITION_MAP[placement].originY &&\n            position.connectionPair.overlayX === POSITION_MAP[placement].overlayX &&\n            position.connectionPair.overlayY === POSITION_MAP[placement].overlayY) {\n            return placement;\n        }\n    }\n    return undefined;\n}\n\nclass NzConnectedOverlayDirective {\n    constructor(cdkConnectedOverlay, nzDestroyService) {\n        this.cdkConnectedOverlay = cdkConnectedOverlay;\n        this.nzDestroyService = nzDestroyService;\n        this.nzArrowPointAtCenter = false;\n        this.cdkConnectedOverlay.backdropClass = 'nz-overlay-transparent-backdrop';\n        this.cdkConnectedOverlay.positionChange\n            .pipe(takeUntil(this.nzDestroyService))\n            .subscribe((position) => {\n            if (this.nzArrowPointAtCenter) {\n                this.updateArrowPosition(position);\n            }\n        });\n    }\n    updateArrowPosition(position) {\n        const originRect = this.getOriginRect();\n        const placement = getPlacementName(position);\n        let offsetX = 0;\n        let offsetY = 0;\n        if (placement === 'topLeft' || placement === 'bottomLeft') {\n            offsetX = originRect.width / 2 - 14;\n        }\n        else if (placement === 'topRight' || placement === 'bottomRight') {\n            offsetX = -(originRect.width / 2 - 14);\n        }\n        else if (placement === 'leftTop' || placement === 'rightTop') {\n            offsetY = originRect.height / 2 - 10;\n        }\n        else if (placement === 'leftBottom' || placement === 'rightBottom') {\n            offsetY = -(originRect.height / 2 - 10);\n        }\n        if (this.cdkConnectedOverlay.offsetX !== offsetX || this.cdkConnectedOverlay.offsetY !== offsetY) {\n            this.cdkConnectedOverlay.offsetY = offsetY;\n            this.cdkConnectedOverlay.offsetX = offsetX;\n            this.cdkConnectedOverlay.overlayRef.updatePosition();\n        }\n    }\n    getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.cdkConnectedOverlay.origin instanceof CdkOverlayOrigin) {\n            return this.cdkConnectedOverlay.origin.elementRef;\n        }\n        else {\n            return this.cdkConnectedOverlay.origin;\n        }\n    }\n    getOriginRect() {\n        const origin = this.getFlexibleConnectedPositionStrategyOrigin();\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nNzConnectedOverlayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzConnectedOverlayDirective, deps: [{ token: i1.CdkConnectedOverlay }, { token: i2.NzDestroyService }], target: i0.ɵɵFactoryTarget.Directive });\nNzConnectedOverlayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzConnectedOverlayDirective, selector: \"[cdkConnectedOverlay][nzConnectedOverlay]\", inputs: { nzArrowPointAtCenter: \"nzArrowPointAtCenter\" }, providers: [NzDestroyService], exportAs: [\"nzConnectedOverlay\"], ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzConnectedOverlayDirective.prototype, \"nzArrowPointAtCenter\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzConnectedOverlayDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkConnectedOverlay][nzConnectedOverlay]',\n                    exportAs: 'nzConnectedOverlay',\n                    providers: [NzDestroyService]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.CdkConnectedOverlay }, { type: i2.NzDestroyService }]; }, propDecorators: { nzArrowPointAtCenter: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzOverlayModule {\n}\nNzOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzOverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzOverlayModule, declarations: [NzConnectedOverlayDirective], exports: [NzConnectedOverlayDirective] });\nNzOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzOverlayModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzOverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzConnectedOverlayDirective],\n                    exports: [NzConnectedOverlayDirective]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_CASCADER_POSITIONS, DEFAULT_MENTION_BOTTOM_POSITIONS, DEFAULT_MENTION_TOP_POSITIONS, DEFAULT_TOOLTIP_POSITIONS, NzConnectedOverlayDirective, NzOverlayModule, POSITION_MAP, getPlacementName };\n"]},"metadata":{},"sourceType":"module"}