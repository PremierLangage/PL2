{"ast":null,"code":"import { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, TemplateRef, Component, ChangeDetectionStrategy, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nfunction NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzSpaceComponent_ng_template_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const last_r2 = ctx_r6.last;\n    const index_r3 = ctx_r6.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r4.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\")(\"margin-right\", ctx_r4.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r4.spaceSize : null, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.nzSplit)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c0, index_r3));\n  }\n}\n\nfunction NzSpaceComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementContainer(1, 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NzSpaceComponent_ng_template_1_span_2_Template, 2, 8, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const last_r2 = ctx.last;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"margin-bottom\", ctx_r0.nzDirection === \"vertical\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\")(\"margin-right\", ctx_r0.nzDirection === \"horizontal\" ? last_r2 ? null : ctx_r0.spaceSize : null, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzSplit && !last_r2);\n  }\n}\n\nconst _c1 = [\"*\"];\n\nclass NzSpaceItemDirective {\n  constructor() {}\n\n}\n\nNzSpaceItemDirective.ɵfac = function NzSpaceItemDirective_Factory(t) {\n  return new (t || NzSpaceItemDirective)();\n};\n\nNzSpaceItemDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzSpaceItemDirective,\n  selectors: [[\"\", \"nzSpaceItem\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nzSpaceItem]'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nconst NZ_CONFIG_MODULE_NAME = 'space';\nconst SPACE_SIZE = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nclass NzSpaceComponent {\n  constructor(nzConfigService, cdr) {\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n    this.nzDirection = 'horizontal';\n    this.nzSplit = null;\n    this.nzWrap = false;\n    this.nzSize = 'small';\n    this.spaceSize = SPACE_SIZE.small;\n    this.destroy$ = new Subject();\n  }\n\n  updateSpaceItems() {\n    const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n    this.spaceSize = numberSize / (this.nzSplit ? 2 : 1);\n    this.cdr.markForCheck();\n  }\n\n  ngOnChanges() {\n    this.updateSpaceItems();\n    this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterContentInit() {\n    this.updateSpaceItems();\n    this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.cdr.markForCheck();\n    });\n  }\n\n}\n\nNzSpaceComponent.ɵfac = function NzSpaceComponent_Factory(t) {\n  return new (t || NzSpaceComponent)(i0.ɵɵdirectiveInject(i1.NzConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nNzSpaceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzSpaceComponent,\n  selectors: [[\"nz-space\"], [\"\", \"nz-space\", \"\"]],\n  contentQueries: function NzSpaceComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzSpaceItemDirective, 4, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  hostAttrs: [1, \"ant-space\"],\n  hostVars: 14,\n  hostBindings: function NzSpaceComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"flex-wrap\", ctx.nzWrap ? \"wrap\" : null);\n      i0.ɵɵclassProp(\"ant-space-horizontal\", ctx.nzDirection === \"horizontal\")(\"ant-space-vertical\", ctx.nzDirection === \"vertical\")(\"ant-space-align-start\", ctx.mergedAlign === \"start\")(\"ant-space-align-end\", ctx.mergedAlign === \"end\")(\"ant-space-align-center\", ctx.mergedAlign === \"center\")(\"ant-space-align-baseline\", ctx.mergedAlign === \"baseline\");\n    }\n  },\n  inputs: {\n    nzDirection: \"nzDirection\",\n    nzAlign: \"nzAlign\",\n    nzSplit: \"nzSplit\",\n    nzWrap: \"nzWrap\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"NzSpace\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"ant-space-item\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-space-split\", 3, \"margin-bottom\", \"margin-right\", 4, \"ngIf\"], [1, \"ant-space-split\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NzSpaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzSpaceComponent_ng_template_1_Template, 3, 6, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  directives: [i2.NgForOf, i2.NgTemplateOutlet, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzSpaceComponent.prototype, \"nzWrap\", void 0);\n\n__decorate([WithConfig()], NzSpaceComponent.prototype, \"nzSize\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-space, [nz-space]',\n      exportAs: 'NzSpace',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n      host: {\n        class: 'ant-space',\n        '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n        '[class.ant-space-vertical]': 'nzDirection === \"vertical\"',\n        '[class.ant-space-align-start]': 'mergedAlign === \"start\"',\n        '[class.ant-space-align-end]': 'mergedAlign === \"end\"',\n        '[class.ant-space-align-center]': 'mergedAlign === \"center\"',\n        '[class.ant-space-align-baseline]': 'mergedAlign === \"baseline\"',\n        '[style.flex-wrap]': 'nzWrap ? \"wrap\" : null'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NzConfigService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    nzDirection: [{\n      type: Input\n    }],\n    nzAlign: [{\n      type: Input\n    }],\n    nzSplit: [{\n      type: Input\n    }],\n    nzWrap: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NzSpaceItemDirective, {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzSpaceModule {}\n\nNzSpaceModule.ɵfac = function NzSpaceModule_Factory(t) {\n  return new (t || NzSpaceModule)();\n};\n\nNzSpaceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzSpaceModule\n});\nNzSpaceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzSpaceModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzSpaceComponent, NzSpaceItemDirective],\n      exports: [NzSpaceComponent, NzSpaceItemDirective],\n      imports: [BidiModule, CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzSpaceComponent, NzSpaceItemDirective, NzSpaceModule };","map":{"version":3,"sources":["/home/ofgha/Documents/PL2/front-end/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-space.mjs"],"names":["BidiModule","i2","CommonModule","i0","Directive","TemplateRef","Component","ChangeDetectionStrategy","Input","ContentChildren","NgModule","__decorate","Subject","takeUntil","i1","WithConfig","InputBoolean","NzSpaceItemDirective","constructor","ɵfac","ɵdir","type","args","selector","NZ_CONFIG_MODULE_NAME","SPACE_SIZE","small","middle","large","NzSpaceComponent","nzConfigService","cdr","_nzModuleName","nzDirection","nzSplit","nzWrap","nzSize","spaceSize","destroy$","updateSpaceItems","numberSize","markForCheck","ngOnChanges","mergedAlign","nzAlign","undefined","ngOnDestroy","next","complete","ngAfterContentInit","items","changes","pipe","subscribe","NzConfigService","ChangeDetectorRef","ɵcmp","NgForOf","NgTemplateOutlet","NgIf","prototype","exportAs","changeDetection","OnPush","template","host","class","read","NzSpaceModule","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import { BidiModule } from '@angular/cdk/bidi';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, TemplateRef, Component, ChangeDetectionStrategy, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate } from 'tslib';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpaceItemDirective {\n    constructor() { }\n}\nNzSpaceItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceItemDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNzSpaceItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzSpaceItemDirective, selector: \"[nzSpaceItem]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceItemDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[nzSpaceItem]'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nconst NZ_CONFIG_MODULE_NAME = 'space';\nconst SPACE_SIZE = {\n    small: 8,\n    middle: 16,\n    large: 24\n};\nclass NzSpaceComponent {\n    constructor(nzConfigService, cdr) {\n        this.nzConfigService = nzConfigService;\n        this.cdr = cdr;\n        this._nzModuleName = NZ_CONFIG_MODULE_NAME;\n        this.nzDirection = 'horizontal';\n        this.nzSplit = null;\n        this.nzWrap = false;\n        this.nzSize = 'small';\n        this.spaceSize = SPACE_SIZE.small;\n        this.destroy$ = new Subject();\n    }\n    updateSpaceItems() {\n        const numberSize = typeof this.nzSize === 'string' ? SPACE_SIZE[this.nzSize] : this.nzSize;\n        this.spaceSize = numberSize / (this.nzSplit ? 2 : 1);\n        this.cdr.markForCheck();\n    }\n    ngOnChanges() {\n        this.updateSpaceItems();\n        this.mergedAlign = this.nzAlign === undefined && this.nzDirection === 'horizontal' ? 'center' : this.nzAlign;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    ngAfterContentInit() {\n        this.updateSpaceItems();\n        this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.cdr.markForCheck();\n        });\n    }\n}\nNzSpaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceComponent, deps: [{ token: i1.NzConfigService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nNzSpaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzSpaceComponent, selector: \"nz-space, [nz-space]\", inputs: { nzDirection: \"nzDirection\", nzAlign: \"nzAlign\", nzSplit: \"nzSplit\", nzWrap: \"nzWrap\", nzSize: \"nzSize\" }, host: { properties: { \"class.ant-space-horizontal\": \"nzDirection === \\\"horizontal\\\"\", \"class.ant-space-vertical\": \"nzDirection === \\\"vertical\\\"\", \"class.ant-space-align-start\": \"mergedAlign === \\\"start\\\"\", \"class.ant-space-align-end\": \"mergedAlign === \\\"end\\\"\", \"class.ant-space-align-center\": \"mergedAlign === \\\"center\\\"\", \"class.ant-space-align-baseline\": \"mergedAlign === \\\"baseline\\\"\", \"style.flex-wrap\": \"nzWrap ? \\\"wrap\\\" : null\" }, classAttribute: \"ant-space\" }, queries: [{ propertyName: \"items\", predicate: NzSpaceItemDirective, read: TemplateRef }], exportAs: [\"NzSpace\"], usesOnChanges: true, ngImport: i0, template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n__decorate([\n    InputBoolean()\n], NzSpaceComponent.prototype, \"nzWrap\", void 0);\n__decorate([\n    WithConfig()\n], NzSpaceComponent.prototype, \"nzSize\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-space, [nz-space]',\n                    exportAs: 'NzSpace',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-content></ng-content>\n    <ng-template ngFor let-item let-last=\"last\" let-index=\"index\" [ngForOf]=\"items\">\n      <div\n        class=\"ant-space-item\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-container [ngTemplateOutlet]=\"item\"></ng-container>\n      </div>\n      <span\n        *ngIf=\"nzSplit && !last\"\n        class=\"ant-space-split\"\n        [style.margin-bottom.px]=\"nzDirection === 'vertical' ? (last ? null : spaceSize) : null\"\n        [style.margin-right.px]=\"nzDirection === 'horizontal' ? (last ? null : spaceSize) : null\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzSplit\" [ngTemplateOutletContext]=\"{ $implicit: index }\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n                    host: {\n                        class: 'ant-space',\n                        '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n                        '[class.ant-space-vertical]': 'nzDirection === \"vertical\"',\n                        '[class.ant-space-align-start]': 'mergedAlign === \"start\"',\n                        '[class.ant-space-align-end]': 'mergedAlign === \"end\"',\n                        '[class.ant-space-align-center]': 'mergedAlign === \"center\"',\n                        '[class.ant-space-align-baseline]': 'mergedAlign === \"baseline\"',\n                        '[style.flex-wrap]': 'nzWrap ? \"wrap\" : null'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1.NzConfigService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { nzDirection: [{\n                type: Input\n            }], nzAlign: [{\n                type: Input\n            }], nzSplit: [{\n                type: Input\n            }], nzWrap: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], items: [{\n                type: ContentChildren,\n                args: [NzSpaceItemDirective, { read: TemplateRef }]\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzSpaceModule {\n}\nNzSpaceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzSpaceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceModule, declarations: [NzSpaceComponent, NzSpaceItemDirective], imports: [BidiModule, CommonModule], exports: [NzSpaceComponent, NzSpaceItemDirective] });\nNzSpaceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceModule, imports: [[BidiModule, CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzSpaceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NzSpaceComponent, NzSpaceItemDirective],\n                    exports: [NzSpaceComponent, NzSpaceItemDirective],\n                    imports: [BidiModule, CommonModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzSpaceComponent, NzSpaceItemDirective, NzSpaceModule };\n"]},"metadata":{},"sourceType":"module"}