{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from 'ng-zorro-antd/core/form';\nimport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule } from 'ng-zorro-antd/core/form';\nimport { getStatusClassNames, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\nconst _c0 = [\"nz-input-group-slot\", \"\"];\n\nfunction NzInputGroupSlotComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nzType\", ctx_r0.icon);\n  }\n}\n\nfunction NzInputGroupSlotComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.template);\n  }\n}\n\nconst _c1 = [\"*\"];\n\nfunction NzInputGroupComponent_span_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r7.nzAddOnBeforeIcon)(\"template\", ctx_r7.nzAddOnBefore);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_span_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵclassProp(\"ant-input-affix-wrapper-disabled\", ctx_r8.disabled)(\"ant-input-affix-wrapper-sm\", ctx_r8.isSmall)(\"ant-input-affix-wrapper-lg\", ctx_r8.isLarge)(\"ant-input-affix-wrapper-focused\", ctx_r8.focused);\n    i0.ɵɵproperty(\"ngClass\", ctx_r8.affixInGroupStatusCls);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r9.nzAddOnAfterIcon)(\"template\", ctx_r9.nzAddOnAfter);\n  }\n}\n\nfunction NzInputGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_span_0_span_1_Template, 1, 2, \"span\", 5);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_span_0_span_2_Template, 2, 10, \"span\", 6);\n    i0.ɵɵtemplate(3, NzInputGroupComponent_span_0_span_3_Template, 1, 2, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnBefore || ctx_r0.nzAddOnBeforeIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isAffix || ctx_r0.hasFeedback)(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.nzAddOnAfter || ctx_r0.nzAddOnAfterIcon);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n\n    const _r3 = i0.ɵɵreference(4);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_1_ng_template_0_Template, 1, 1, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isAffix)(\"ngIfElse\", _r5);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r13.nzPrefixIcon)(\"template\", ctx_r13.nzPrefix);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_ng_template_1_Template(rf, ctx) {}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_nz_form_item_feedback_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nz-form-item-feedback-icon\", 16);\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"status\", ctx_r16.status);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_span_2_nz_form_item_feedback_icon_1_Template, 1, 1, \"nz-form-item-feedback-icon\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"icon\", ctx_r15.nzSuffixIcon)(\"template\", ctx_r15.nzSuffix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isFeedback);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NzInputGroupComponent_ng_template_3_span_0_Template, 1, 2, \"span\", 11);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_3_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    i0.ɵɵtemplate(2, NzInputGroupComponent_ng_template_3_span_2_Template, 2, 3, \"span\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzPrefix || ctx_r4.nzPrefixIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.nzSuffix || ctx_r4.nzSuffixIcon || ctx_r4.isFeedback);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵelement(1, \"nz-form-item-feedback-icon\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"status\", ctx_r17.status);\n  }\n}\n\nfunction NzInputGroupComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n    i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_5_span_1_Template, 2, 1, \"span\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.isAddOn && !ctx_r6.isAffix && ctx_r6.isFeedback);\n  }\n}\n\nconst _c2 = [[[\"textarea\", \"nz-input\", \"\"]]];\nconst _c3 = [\"textarea[nz-input]\"];\n\nclass NzInputDirective {\n  constructor(ngControl, renderer, elementRef, hostView, directionality, nzFormStatusService, nzFormNoStatusService) {\n    this.ngControl = ngControl;\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.hostView = hostView;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.nzFormNoStatusService = nzFormNoStatusService;\n    this.nzBorderless = false;\n    this.nzSize = 'default';\n    this.nzStatus = '';\n    this._disabled = false;\n    this.disabled$ = new Subject();\n    this.dir = 'ltr'; // status\n\n    this.prefixCls = 'ant-input';\n    this.status = '';\n    this.statusCls = {};\n    this.hasFeedback = false;\n    this.feedbackRef = null;\n    this.components = [];\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-input');\n  }\n\n  get disabled() {\n    if (this.ngControl && this.ngControl.disabled !== null) {\n      return this.ngControl.disabled;\n    }\n\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value != null && `${value}` !== 'false';\n  }\n\n  ngOnInit() {\n    var _a, _b, _c;\n\n    (_a = this.nzFormStatusService) === null || _a === void 0 ? void 0 : _a.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n      return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n    }), takeUntil(this.destroy$)).subscribe(({\n      status,\n      hasFeedback\n    }) => {\n      this.setStatusStyles(status, hasFeedback);\n    });\n\n    if (this.ngControl) {\n      (_b = this.ngControl.statusChanges) === null || _b === void 0 ? void 0 : _b.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$)).subscribe(() => {\n        this.disabled$.next(this.ngControl.disabled);\n      });\n    }\n\n    this.dir = this.directionality.value;\n    (_c = this.directionality.change) === null || _c === void 0 ? void 0 : _c.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngOnChanges(changes) {\n    const {\n      disabled,\n      nzStatus\n    } = changes;\n\n    if (disabled) {\n      this.disabled$.next(this.disabled);\n    }\n\n    if (nzStatus) {\n      this.setStatusStyles(this.nzStatus, this.hasFeedback);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setStatusStyles(status, hasFeedback) {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.renderFeedbackIcon(); // render status if nzStatus is set\n\n    this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n    Object.keys(this.statusCls).forEach(status => {\n      if (this.statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n\n  renderFeedbackIcon() {\n    if (!this.status || !this.hasFeedback || !!this.nzFormNoStatusService) {\n      // remove feedback\n      this.hostView.clear();\n      this.feedbackRef = null;\n      return;\n    }\n\n    this.feedbackRef = this.feedbackRef || this.hostView.createComponent(NzFormItemFeedbackIconComponent);\n    this.feedbackRef.location.nativeElement.classList.add('ant-input-suffix');\n    this.feedbackRef.instance.status = this.status;\n    this.feedbackRef.instance.updateIcon();\n  }\n\n}\n\nNzInputDirective.ɵfac = function NzInputDirective_Factory(t) {\n  return new (t || NzInputDirective)(i0.ɵɵdirectiveInject(i1.NgControl, 10), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzFormStatusService, 8), i0.ɵɵdirectiveInject(i3.NzFormNoStatusService, 8));\n};\n\nNzInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputDirective,\n  selectors: [[\"input\", \"nz-input\", \"\"], [\"textarea\", \"nz-input\", \"\"]],\n  hostVars: 11,\n  hostBindings: function NzInputDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n      i0.ɵɵclassProp(\"ant-input-disabled\", ctx.disabled)(\"ant-input-borderless\", ctx.nzBorderless)(\"ant-input-lg\", ctx.nzSize === \"large\")(\"ant-input-sm\", ctx.nzSize === \"small\")(\"ant-input-rtl\", ctx.dir === \"rtl\");\n    }\n  },\n  inputs: {\n    nzBorderless: \"nzBorderless\",\n    nzSize: \"nzSize\",\n    nzStatus: \"nzStatus\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"nzInput\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n__decorate([InputBoolean()], NzInputDirective.prototype, \"nzBorderless\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'input[nz-input],textarea[nz-input]',\n      exportAs: 'nzInput',\n      host: {\n        '[class.ant-input-disabled]': 'disabled',\n        '[class.ant-input-borderless]': 'nzBorderless',\n        '[class.ant-input-lg]': `nzSize === 'large'`,\n        '[class.ant-input-sm]': `nzSize === 'small'`,\n        '[attr.disabled]': 'disabled || null',\n        '[class.ant-input-rtl]': `dir=== 'rtl'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormNoStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzBorderless: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputGroupSlotComponent {\n  constructor() {\n    this.icon = null;\n    this.type = null;\n    this.template = null;\n  }\n\n}\n\nNzInputGroupSlotComponent.ɵfac = function NzInputGroupSlotComponent_Factory(t) {\n  return new (t || NzInputGroupSlotComponent)();\n};\n\nNzInputGroupSlotComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupSlotComponent,\n  selectors: [[\"\", \"nz-input-group-slot\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzInputGroupSlotComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-addon\", ctx.type === \"addon\")(\"ant-input-prefix\", ctx.type === \"prefix\")(\"ant-input-suffix\", ctx.type === \"suffix\");\n    }\n  },\n  inputs: {\n    icon: \"icon\",\n    type: \"type\",\n    template: \"template\"\n  },\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzInputGroupSlotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzInputGroupSlotComponent_i_0_Template, 1, 1, \"i\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupSlotComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.template);\n    }\n  },\n  directives: [i5.NgIf, i2$1.NzIconDirective, i3$1.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupSlotComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-input-group-slot]',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `,\n      host: {\n        '[class.ant-input-group-addon]': `type === 'addon'`,\n        '[class.ant-input-prefix]': `type === 'prefix'`,\n        '[class.ant-input-suffix]': `type === 'suffix'`\n      }\n    }]\n  }], null, {\n    icon: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n\n}\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = function NzInputGroupWhitSuffixOrPrefixDirective_Factory(t) {\n  return new (t || NzInputGroupWhitSuffixOrPrefixDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzInputGroupWhitSuffixOrPrefixDirective,\n  selectors: [[\"nz-input-group\", \"nzSuffix\", \"\"], [\"nz-input-group\", \"nzPrefix\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupWhitSuffixOrPrefixDirective, [{\n    type: Directive,\n    args: [{\n      selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass NzInputGroupComponent {\n  constructor(focusMonitor, elementRef, renderer, cdr, directionality, nzFormStatusService, nzFormNoStatusService) {\n    this.focusMonitor = focusMonitor;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.directionality = directionality;\n    this.nzFormStatusService = nzFormStatusService;\n    this.nzFormNoStatusService = nzFormNoStatusService;\n    this.nzAddOnBeforeIcon = null;\n    this.nzAddOnAfterIcon = null;\n    this.nzPrefixIcon = null;\n    this.nzSuffixIcon = null;\n    this.nzStatus = '';\n    this.nzSize = 'default';\n    this.nzSearch = false;\n    this.nzCompact = false;\n    this.isLarge = false;\n    this.isSmall = false;\n    this.isAffix = false;\n    this.isAddOn = false;\n    this.isFeedback = false;\n    this.focused = false;\n    this.disabled = false;\n    this.dir = 'ltr'; // status\n\n    this.prefixCls = 'ant-input';\n    this.affixStatusCls = {};\n    this.groupStatusCls = {};\n    this.affixInGroupStatusCls = {};\n    this.status = '';\n    this.hasFeedback = false;\n    this.destroy$ = new Subject();\n  }\n\n  updateChildrenInputSize() {\n    if (this.listOfNzInputDirective) {\n      this.listOfNzInputDirective.forEach(item => item.nzSize = this.nzSize);\n    }\n  }\n\n  ngOnInit() {\n    var _a, _b;\n\n    (_a = this.nzFormStatusService) === null || _a === void 0 ? void 0 : _a.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n      return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n    }), takeUntil(this.destroy$)).subscribe(({\n      status,\n      hasFeedback\n    }) => {\n      this.setStatusStyles(status, hasFeedback);\n    });\n    this.focusMonitor.monitor(this.elementRef, true).pipe(takeUntil(this.destroy$)).subscribe(focusOrigin => {\n      this.focused = !!focusOrigin;\n      this.cdr.markForCheck();\n    });\n    this.dir = this.directionality.value;\n    (_b = this.directionality.change) === null || _b === void 0 ? void 0 : _b.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n    });\n  }\n\n  ngAfterContentInit() {\n    this.updateChildrenInputSize();\n    const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n    listOfInputChange$.pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map(input => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some(input => input.disabled)), takeUntil(this.destroy$)).subscribe(disabled => {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    });\n  }\n\n  ngOnChanges(changes) {\n    var _a, _b;\n\n    const {\n      nzSize,\n      nzSuffix,\n      nzPrefix,\n      nzPrefixIcon,\n      nzSuffixIcon,\n      nzAddOnAfter,\n      nzAddOnBefore,\n      nzAddOnAfterIcon,\n      nzAddOnBeforeIcon,\n      nzStatus\n    } = changes;\n\n    if (nzSize) {\n      this.updateChildrenInputSize();\n      this.isLarge = this.nzSize === 'large';\n      this.isSmall = this.nzSize === 'small';\n    }\n\n    if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n      this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    }\n\n    if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n      this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n      (_b = (_a = this.nzFormNoStatusService) === null || _a === void 0 ? void 0 : _a.noFormStatus) === null || _b === void 0 ? void 0 : _b.next(this.isAddOn);\n    }\n\n    if (nzStatus) {\n      this.setStatusStyles(this.nzStatus, this.hasFeedback);\n    }\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  setStatusStyles(status, hasFeedback) {\n    // set inner status\n    this.status = status;\n    this.hasFeedback = hasFeedback;\n    this.isFeedback = !!status && hasFeedback;\n    const baseAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n    this.isAffix = baseAffix || !this.isAddOn && hasFeedback;\n    this.affixInGroupStatusCls = this.isAffix || this.isFeedback ? this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, status, hasFeedback) : {};\n    this.cdr.markForCheck(); // render status if nzStatus is set\n\n    this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, this.isAddOn ? '' : status, this.isAddOn ? false : hasFeedback);\n    this.groupStatusCls = getStatusClassNames(`${this.prefixCls}-group-wrapper`, this.isAddOn ? status : '', this.isAddOn ? hasFeedback : false);\n    const statusCls = Object.assign(Object.assign({}, this.affixStatusCls), this.groupStatusCls);\n    Object.keys(statusCls).forEach(status => {\n      if (statusCls[status]) {\n        this.renderer.addClass(this.elementRef.nativeElement, status);\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, status);\n      }\n    });\n  }\n\n}\n\nNzInputGroupComponent.ɵfac = function NzInputGroupComponent_Factory(t) {\n  return new (t || NzInputGroupComponent)(i0.ɵɵdirectiveInject(i1$1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i3.NzFormStatusService, 8), i0.ɵɵdirectiveInject(i3.NzFormNoStatusService, 8));\n};\n\nNzInputGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzInputGroupComponent,\n  selectors: [[\"nz-input-group\"]],\n  contentQueries: function NzInputGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listOfNzInputDirective = _t);\n    }\n  },\n  hostVars: 40,\n  hostBindings: function NzInputGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ant-input-group-compact\", ctx.nzCompact)(\"ant-input-search-enter-button\", ctx.nzSearch)(\"ant-input-search\", ctx.nzSearch)(\"ant-input-search-rtl\", ctx.dir === \"rtl\")(\"ant-input-search-sm\", ctx.nzSearch && ctx.isSmall)(\"ant-input-search-large\", ctx.nzSearch && ctx.isLarge)(\"ant-input-group-wrapper\", ctx.isAddOn)(\"ant-input-group-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-wrapper-lg\", ctx.isAddOn && ctx.isLarge)(\"ant-input-group-wrapper-sm\", ctx.isAddOn && ctx.isSmall)(\"ant-input-affix-wrapper\", ctx.isAffix && !ctx.isAddOn)(\"ant-input-affix-wrapper-rtl\", ctx.dir === \"rtl\")(\"ant-input-affix-wrapper-focused\", ctx.isAffix && ctx.focused)(\"ant-input-affix-wrapper-disabled\", ctx.isAffix && ctx.disabled)(\"ant-input-affix-wrapper-lg\", ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-affix-wrapper-sm\", ctx.isAffix && !ctx.isAddOn && ctx.isSmall)(\"ant-input-group\", !ctx.isAffix && !ctx.isAddOn)(\"ant-input-group-rtl\", ctx.dir === \"rtl\")(\"ant-input-group-lg\", !ctx.isAffix && !ctx.isAddOn && ctx.isLarge)(\"ant-input-group-sm\", !ctx.isAffix && !ctx.isAddOn && ctx.isSmall);\n    }\n  },\n  inputs: {\n    nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\",\n    nzAddOnAfterIcon: \"nzAddOnAfterIcon\",\n    nzPrefixIcon: \"nzPrefixIcon\",\n    nzSuffixIcon: \"nzSuffixIcon\",\n    nzAddOnBefore: \"nzAddOnBefore\",\n    nzAddOnAfter: \"nzAddOnAfter\",\n    nzPrefix: \"nzPrefix\",\n    nzStatus: \"nzStatus\",\n    nzSuffix: \"nzSuffix\",\n    nzSize: \"nzSize\",\n    nzSearch: \"nzSearch\",\n    nzCompact: \"nzCompact\"\n  },\n  exportAs: [\"nzInputGroup\"],\n  features: [i0.ɵɵProvidersFeature([NzFormNoStatusService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 7,\n  vars: 2,\n  consts: [[\"class\", \"ant-input-wrapper ant-input-group\", 4, \"ngIf\", \"ngIfElse\"], [\"noAddOnTemplate\", \"\"], [\"affixTemplate\", \"\"], [\"contentTemplate\", \"\"], [1, \"ant-input-wrapper\", \"ant-input-group\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"class\", \"ant-input-affix-wrapper\", 3, \"ant-input-affix-wrapper-disabled\", \"ant-input-affix-wrapper-sm\", \"ant-input-affix-wrapper-lg\", \"ant-input-affix-wrapper-focused\", \"ngClass\", 4, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"addon\", 3, \"icon\", \"template\"], [1, \"ant-input-affix-wrapper\", 3, \"ngClass\"], [3, \"ngTemplateOutlet\"], [3, \"ngIf\", \"ngIfElse\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"prefix\", 3, \"icon\", \"template\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 3, \"icon\", \"template\"], [3, \"status\", 4, \"ngIf\"], [3, \"status\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\", 4, \"ngIf\"], [\"nz-input-group-slot\", \"\", \"type\", \"suffix\"]],\n  template: function NzInputGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzInputGroupComponent_span_0_Template, 4, 4, \"span\", 0);\n      i0.ɵɵtemplate(1, NzInputGroupComponent_ng_template_1_Template, 1, 2, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzInputGroupComponent_ng_template_3_Template, 3, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(5, NzInputGroupComponent_ng_template_5_Template, 2, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.isAddOn)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [NzInputGroupSlotComponent, i3.NzFormItemFeedbackIconComponent, i5.NgIf, i5.NgClass, i5.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean()], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-input-group',\n      exportAs: 'nzInputGroup',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [NzFormNoStatusService],\n      template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `,\n      host: {\n        '[class.ant-input-group-compact]': `nzCompact`,\n        '[class.ant-input-search-enter-button]': `nzSearch`,\n        '[class.ant-input-search]': `nzSearch`,\n        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n        '[class.ant-input-group-wrapper]': `isAddOn`,\n        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1$1.FocusMonitor\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.NzFormNoStatusService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    listOfNzInputDirective: [{\n      type: ContentChildren,\n      args: [NzInputDirective]\n    }],\n    nzAddOnBeforeIcon: [{\n      type: Input\n    }],\n    nzAddOnAfterIcon: [{\n      type: Input\n    }],\n    nzPrefixIcon: [{\n      type: Input\n    }],\n    nzSuffixIcon: [{\n      type: Input\n    }],\n    nzAddOnBefore: [{\n      type: Input\n    }],\n    nzAddOnAfter: [{\n      type: Input\n    }],\n    nzPrefix: [{\n      type: Input\n    }],\n    nzStatus: [{\n      type: Input\n    }],\n    nzSuffix: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzCompact: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NzAutosizeDirective {\n  constructor(elementRef, ngZone, platform, resizeService) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.platform = platform;\n    this.resizeService = resizeService;\n    this.autosize = false;\n    this.el = this.elementRef.nativeElement;\n    this.maxHeight = null;\n    this.minHeight = null;\n    this.destroy$ = new Subject();\n    this.inputGap = 10;\n  }\n\n  set nzAutosize(value) {\n    const isAutoSizeType = data => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n\n    if (typeof value === 'string' || value === true) {\n      this.autosize = true;\n    } else if (isAutoSizeType(value)) {\n      this.autosize = true;\n      this.minRows = value.minRows;\n      this.maxRows = value.maxRows;\n      this.maxHeight = this.setMaxHeight();\n      this.minHeight = this.setMinHeight();\n    }\n  }\n\n  resizeToFitContent(force = false) {\n    this.cacheTextareaLineHeight(); // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n\n    if (!this.cachedLineHeight) {\n      return;\n    }\n\n    const textarea = this.el;\n    const value = textarea.value; // Only resize if the value or minRows have changed since these calculations can be expensive.\n\n    if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n      return;\n    }\n\n    const placeholderText = textarea.placeholder; // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n    // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n    // need to be removed temporarily.\n\n    textarea.classList.add('nz-textarea-autosize-measuring');\n    textarea.placeholder = '';\n    let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight + this.inputGap;\n\n    if (this.maxHeight !== null && height > this.maxHeight) {\n      height = this.maxHeight;\n    }\n\n    if (this.minHeight !== null && height < this.minHeight) {\n      height = this.minHeight;\n    } // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n\n\n    textarea.style.height = `${height}px`;\n    textarea.classList.remove('nz-textarea-autosize-measuring');\n    textarea.placeholder = placeholderText; // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n    // We need to re-set the selection in order for it to scroll to the proper position.\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n        const {\n          selectionStart,\n          selectionEnd\n        } = textarea; // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n\n        if (!this.destroy$.isStopped && document.activeElement === textarea) {\n          textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n      }));\n    }\n\n    this.previousValue = value;\n    this.previousMinRows = this.minRows;\n  }\n\n  cacheTextareaLineHeight() {\n    if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n      return;\n    } // Use a clone element because we have to override some styles.\n\n\n    const textareaClone = this.el.cloneNode(false);\n    textareaClone.rows = 1; // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = ''; // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n\n    textareaClone.style.overflow = 'hidden';\n    this.el.parentNode.appendChild(textareaClone);\n    this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n    this.el.parentNode.removeChild(textareaClone); // Min and max heights have to be re-calculated if the cached line height changes\n\n    this.maxHeight = this.setMaxHeight();\n    this.minHeight = this.setMinHeight();\n  }\n\n  setMinHeight() {\n    const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (minHeight !== null) {\n      this.el.style.minHeight = `${minHeight}px`;\n    }\n\n    return minHeight;\n  }\n\n  setMaxHeight() {\n    const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n\n    if (maxHeight !== null) {\n      this.el.style.maxHeight = `${maxHeight}px`;\n    }\n\n    return maxHeight;\n  }\n\n  noopInputHandler() {// no-op handler that ensures we're running change detection on input events.\n  }\n\n  ngAfterViewInit() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n      this.resizeService.subscribe().pipe(takeUntil(this.destroy$)).subscribe(() => this.resizeToFitContent(true));\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngDoCheck() {\n    if (this.autosize && this.platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n\n}\n\nNzAutosizeDirective.ɵfac = function NzAutosizeDirective_Factory(t) {\n  return new (t || NzAutosizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$2.Platform), i0.ɵɵdirectiveInject(i2$2.NzResizeService));\n};\n\nNzAutosizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NzAutosizeDirective,\n  selectors: [[\"textarea\", \"nzAutosize\", \"\"]],\n  hostAttrs: [\"rows\", \"1\"],\n  hostBindings: function NzAutosizeDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function NzAutosizeDirective_input_HostBindingHandler() {\n        return ctx.noopInputHandler();\n      });\n    }\n  },\n  inputs: {\n    nzAutosize: \"nzAutosize\"\n  },\n  exportAs: [\"nzAutosize\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzAutosizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[nzAutosize]',\n      exportAs: 'nzAutosize',\n      host: {\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        rows: '1',\n        '(input)': 'noopInputHandler()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$2.Platform\n    }, {\n      type: i2$2.NzResizeService\n    }];\n  }, {\n    nzAutosize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzTextareaCountComponent {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.nzMaxCharacterCount = 0;\n\n    this.nzComputeCharacterCount = v => v.length;\n\n    this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n\n    this.configChange$ = new Subject();\n    this.destroy$ = new Subject();\n  }\n\n  ngAfterContentInit() {\n    if (!this.nzInputDirective && isDevMode()) {\n      throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n    }\n\n    if (this.nzInputDirective.ngControl) {\n      const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n      merge(valueChanges, this.configChange$).pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value)).subscribe(value => {\n        this.setDataCount(value);\n      });\n    }\n  }\n\n  setDataCount(value) {\n    const inputValue = isNotNil(value) ? String(value) : '';\n    const currentCount = this.nzComputeCharacterCount(inputValue);\n    const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n    this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n  }\n\n  ngOnDestroy() {\n    this.configChange$.complete();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNzTextareaCountComponent.ɵfac = function NzTextareaCountComponent_Factory(t) {\n  return new (t || NzTextareaCountComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNzTextareaCountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzTextareaCountComponent,\n  selectors: [[\"nz-textarea-count\"]],\n  contentQueries: function NzTextareaCountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NzInputDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nzInputDirective = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ant-input-textarea-show-count\"],\n  inputs: {\n    nzMaxCharacterCount: \"nzMaxCharacterCount\",\n    nzComputeCharacterCount: \"nzComputeCharacterCount\",\n    nzFormatter: \"nzFormatter\"\n  },\n  ngContentSelectors: _c3,\n  decls: 1,\n  vars: 0,\n  template: function NzTextareaCountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c2);\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzTextareaCountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-textarea-count',\n      template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n      host: {\n        class: 'ant-input-textarea-show-count'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    nzInputDirective: [{\n      type: ContentChild,\n      args: [NzInputDirective, {\n        static: true\n      }]\n    }],\n    nzMaxCharacterCount: [{\n      type: Input\n    }],\n    nzComputeCharacterCount: [{\n      type: Input\n    }],\n    nzFormatter: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n\nclass NzInputModule {}\n\nNzInputModule.ɵfac = function NzInputModule_Factory(t) {\n  return new (t || NzInputModule)();\n};\n\nNzInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzInputModule\n});\nNzInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective],\n      exports: [NzTextareaCountComponent, NzInputDirective, NzInputGroupComponent, NzAutosizeDirective, NzInputGroupWhitSuffixOrPrefixDirective],\n      entryComponents: [NzFormItemFeedbackIconComponent],\n      imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]\n    }]\n  }], null, null);\n})();\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };","map":{"version":3,"sources":["/home/ofgha/Documents/PL2/front-end/node_modules/ng-zorro-antd/fesm2015/ng-zorro-antd-input.mjs"],"names":["__decorate","i0","Directive","Optional","Self","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","isDevMode","ContentChild","NgModule","Subject","merge","EMPTY","distinctUntilChanged","takeUntil","filter","startWith","switchMap","mergeMap","map","i3","NzFormItemFeedbackIconComponent","NzFormNoStatusService","NzFormPatchModule","getStatusClassNames","InputBoolean","isNotNil","i1","i2","BidiModule","i1$1","i5","CommonModule","i2$1","NzIconModule","i3$1","NzOutletModule","i1$2","PlatformModule","i2$2","NzInputDirective","constructor","ngControl","renderer","elementRef","hostView","directionality","nzFormStatusService","nzFormNoStatusService","nzBorderless","nzSize","nzStatus","_disabled","disabled$","dir","prefixCls","status","statusCls","hasFeedback","feedbackRef","components","destroy$","addClass","nativeElement","disabled","value","ngOnInit","_a","_b","_c","formStatusChanges","pipe","pre","cur","subscribe","setStatusStyles","statusChanges","next","change","direction","ngOnChanges","changes","ngOnDestroy","complete","renderFeedbackIcon","Object","keys","forEach","removeClass","clear","createComponent","location","classList","add","instance","updateIcon","ɵfac","NgControl","Renderer2","ElementRef","ViewContainerRef","Directionality","NzFormStatusService","ɵdir","prototype","type","args","selector","exportAs","host","decorators","NzInputGroupSlotComponent","icon","template","ɵcmp","NgIf","NzIconDirective","NzStringTemplateOutletDirective","preserveWhitespaces","encapsulation","None","changeDetection","OnPush","NzInputGroupWhitSuffixOrPrefixDirective","NzInputGroupComponent","focusMonitor","cdr","nzAddOnBeforeIcon","nzAddOnAfterIcon","nzPrefixIcon","nzSuffixIcon","nzSearch","nzCompact","isLarge","isSmall","isAffix","isAddOn","isFeedback","focused","affixStatusCls","groupStatusCls","affixInGroupStatusCls","updateChildrenInputSize","listOfNzInputDirective","item","monitor","focusOrigin","markForCheck","ngAfterContentInit","listOfInputChange$","list","input","some","nzSuffix","nzPrefix","nzAddOnAfter","nzAddOnBefore","noFormStatus","stopMonitoring","baseAffix","assign","FocusMonitor","ChangeDetectorRef","NgClass","NgTemplateOutlet","providers","NzAutosizeDirective","ngZone","platform","resizeService","autosize","el","maxHeight","minHeight","inputGap","nzAutosize","isAutoSizeType","data","maxRows","minRows","setMaxHeight","setMinHeight","resizeToFitContent","force","cacheTextareaLineHeight","cachedLineHeight","textarea","previousMinRows","previousValue","placeholderText","placeholder","height","Math","round","scrollHeight","style","remove","requestAnimationFrame","runOutsideAngular","selectionStart","selectionEnd","isStopped","document","activeElement","setSelectionRange","parentNode","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","appendChild","clientHeight","removeChild","noopInputHandler","ngAfterViewInit","isBrowser","ngDoCheck","NgZone","Platform","NzResizeService","NzTextareaCountComponent","nzMaxCharacterCount","nzComputeCharacterCount","v","length","nzFormatter","c","m","configChange$","nzInputDirective","Error","valueChanges","setDataCount","inputValue","String","currentCount","dataCount","setAttribute","class","static","NzInputModule","ɵmod","ɵinj","declarations","exports","entryComponents","imports"],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, Optional, Self, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, isDevMode, ContentChild, NgModule } from '@angular/core';\nimport { Subject, merge, EMPTY } from 'rxjs';\nimport { distinctUntilChanged, takeUntil, filter, startWith, switchMap, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from 'ng-zorro-antd/core/form';\nimport { NzFormItemFeedbackIconComponent, NzFormNoStatusService, NzFormPatchModule } from 'ng-zorro-antd/core/form';\nimport { getStatusClassNames, InputBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/forms';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/a11y';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3$1 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i2$2 from 'ng-zorro-antd/core/services';\n\nclass NzInputDirective {\n    constructor(ngControl, renderer, elementRef, hostView, directionality, nzFormStatusService, nzFormNoStatusService) {\n        this.ngControl = ngControl;\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.hostView = hostView;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.nzFormNoStatusService = nzFormNoStatusService;\n        this.nzBorderless = false;\n        this.nzSize = 'default';\n        this.nzStatus = '';\n        this._disabled = false;\n        this.disabled$ = new Subject();\n        this.dir = 'ltr';\n        // status\n        this.prefixCls = 'ant-input';\n        this.status = '';\n        this.statusCls = {};\n        this.hasFeedback = false;\n        this.feedbackRef = null;\n        this.components = [];\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-input');\n    }\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value != null && `${value}` !== 'false';\n    }\n    ngOnInit() {\n        var _a, _b, _c;\n        (_a = this.nzFormStatusService) === null || _a === void 0 ? void 0 : _a.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n            return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }), takeUntil(this.destroy$)).subscribe(({ status, hasFeedback }) => {\n            this.setStatusStyles(status, hasFeedback);\n        });\n        if (this.ngControl) {\n            (_b = this.ngControl.statusChanges) === null || _b === void 0 ? void 0 : _b.pipe(filter(() => this.ngControl.disabled !== null), takeUntil(this.destroy$)).subscribe(() => {\n                this.disabled$.next(this.ngControl.disabled);\n            });\n        }\n        this.dir = this.directionality.value;\n        (_c = this.directionality.change) === null || _c === void 0 ? void 0 : _c.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngOnChanges(changes) {\n        const { disabled, nzStatus } = changes;\n        if (disabled) {\n            this.disabled$.next(this.disabled);\n        }\n        if (nzStatus) {\n            this.setStatusStyles(this.nzStatus, this.hasFeedback);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setStatusStyles(status, hasFeedback) {\n        // set inner status\n        this.status = status;\n        this.hasFeedback = hasFeedback;\n        this.renderFeedbackIcon();\n        // render status if nzStatus is set\n        this.statusCls = getStatusClassNames(this.prefixCls, status, hasFeedback);\n        Object.keys(this.statusCls).forEach(status => {\n            if (this.statusCls[status]) {\n                this.renderer.addClass(this.elementRef.nativeElement, status);\n            }\n            else {\n                this.renderer.removeClass(this.elementRef.nativeElement, status);\n            }\n        });\n    }\n    renderFeedbackIcon() {\n        if (!this.status || !this.hasFeedback || !!this.nzFormNoStatusService) {\n            // remove feedback\n            this.hostView.clear();\n            this.feedbackRef = null;\n            return;\n        }\n        this.feedbackRef = this.feedbackRef || this.hostView.createComponent(NzFormItemFeedbackIconComponent);\n        this.feedbackRef.location.nativeElement.classList.add('ant-input-suffix');\n        this.feedbackRef.instance.status = this.status;\n        this.feedbackRef.instance.updateIcon();\n    }\n}\nNzInputDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputDirective, deps: [{ token: i1.NgControl, optional: true, self: true }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i2.Directionality, optional: true }, { token: i3.NzFormStatusService, optional: true }, { token: i3.NzFormNoStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzInputDirective, selector: \"input[nz-input],textarea[nz-input]\", inputs: { nzBorderless: \"nzBorderless\", nzSize: \"nzSize\", nzStatus: \"nzStatus\", disabled: \"disabled\" }, host: { properties: { \"class.ant-input-disabled\": \"disabled\", \"class.ant-input-borderless\": \"nzBorderless\", \"class.ant-input-lg\": \"nzSize === 'large'\", \"class.ant-input-sm\": \"nzSize === 'small'\", \"attr.disabled\": \"disabled || null\", \"class.ant-input-rtl\": \"dir=== 'rtl'\" } }, exportAs: [\"nzInput\"], usesOnChanges: true, ngImport: i0 });\n__decorate([\n    InputBoolean()\n], NzInputDirective.prototype, \"nzBorderless\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[nz-input],textarea[nz-input]',\n                    exportAs: 'nzInput',\n                    host: {\n                        '[class.ant-input-disabled]': 'disabled',\n                        '[class.ant-input-borderless]': 'nzBorderless',\n                        '[class.ant-input-lg]': `nzSize === 'large'`,\n                        '[class.ant-input-sm]': `nzSize === 'small'`,\n                        '[attr.disabled]': 'disabled || null',\n                        '[class.ant-input-rtl]': `dir=== 'rtl'`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzFormStatusService, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzFormNoStatusService, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { nzBorderless: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputGroupSlotComponent {\n    constructor() {\n        this.icon = null;\n        this.type = null;\n        this.template = null;\n    }\n}\nNzInputGroupSlotComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupSlotComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupSlotComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: { icon: \"icon\", type: \"type\", template: \"template\" }, host: { properties: { \"class.ant-input-group-addon\": \"type === 'addon'\", \"class.ant-input-prefix\": \"type === 'prefix'\", \"class.ant-input-suffix\": \"type === 'suffix'\" } }, ngImport: i0, template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `, isInline: true, directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { type: i3$1.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupSlotComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[nz-input-group-slot]',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <i nz-icon [nzType]=\"icon\" *ngIf=\"icon\"></i>\n    <ng-container *nzStringTemplateOutlet=\"template\">{{ template }}</ng-container>\n    <ng-content></ng-content>\n  `,\n                    host: {\n                        '[class.ant-input-group-addon]': `type === 'addon'`,\n                        '[class.ant-input-prefix]': `type === 'prefix'`,\n                        '[class.ant-input-suffix]': `type === 'suffix'`\n                    }\n                }]\n        }], propDecorators: { icon: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }] } });\n\nclass NzInputGroupWhitSuffixOrPrefixDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nNzInputGroupWhitSuffixOrPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNzInputGroupWhitSuffixOrPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzInputGroupWhitSuffixOrPrefixDirective, selector: \"nz-input-group[nzSuffix], nz-input-group[nzPrefix]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupWhitSuffixOrPrefixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `nz-input-group[nzSuffix], nz-input-group[nzPrefix]`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\nclass NzInputGroupComponent {\n    constructor(focusMonitor, elementRef, renderer, cdr, directionality, nzFormStatusService, nzFormNoStatusService) {\n        this.focusMonitor = focusMonitor;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.directionality = directionality;\n        this.nzFormStatusService = nzFormStatusService;\n        this.nzFormNoStatusService = nzFormNoStatusService;\n        this.nzAddOnBeforeIcon = null;\n        this.nzAddOnAfterIcon = null;\n        this.nzPrefixIcon = null;\n        this.nzSuffixIcon = null;\n        this.nzStatus = '';\n        this.nzSize = 'default';\n        this.nzSearch = false;\n        this.nzCompact = false;\n        this.isLarge = false;\n        this.isSmall = false;\n        this.isAffix = false;\n        this.isAddOn = false;\n        this.isFeedback = false;\n        this.focused = false;\n        this.disabled = false;\n        this.dir = 'ltr';\n        // status\n        this.prefixCls = 'ant-input';\n        this.affixStatusCls = {};\n        this.groupStatusCls = {};\n        this.affixInGroupStatusCls = {};\n        this.status = '';\n        this.hasFeedback = false;\n        this.destroy$ = new Subject();\n    }\n    updateChildrenInputSize() {\n        if (this.listOfNzInputDirective) {\n            this.listOfNzInputDirective.forEach(item => (item.nzSize = this.nzSize));\n        }\n    }\n    ngOnInit() {\n        var _a, _b;\n        (_a = this.nzFormStatusService) === null || _a === void 0 ? void 0 : _a.formStatusChanges.pipe(distinctUntilChanged((pre, cur) => {\n            return pre.status === cur.status && pre.hasFeedback === cur.hasFeedback;\n        }), takeUntil(this.destroy$)).subscribe(({ status, hasFeedback }) => {\n            this.setStatusStyles(status, hasFeedback);\n        });\n        this.focusMonitor\n            .monitor(this.elementRef, true)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(focusOrigin => {\n            this.focused = !!focusOrigin;\n            this.cdr.markForCheck();\n        });\n        this.dir = this.directionality.value;\n        (_b = this.directionality.change) === null || _b === void 0 ? void 0 : _b.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n        });\n    }\n    ngAfterContentInit() {\n        this.updateChildrenInputSize();\n        const listOfInputChange$ = this.listOfNzInputDirective.changes.pipe(startWith(this.listOfNzInputDirective));\n        listOfInputChange$\n            .pipe(switchMap(list => merge(...[listOfInputChange$, ...list.map((input) => input.disabled$)])), mergeMap(() => listOfInputChange$), map(list => list.some((input) => input.disabled)), takeUntil(this.destroy$))\n            .subscribe(disabled => {\n            this.disabled = disabled;\n            this.cdr.markForCheck();\n        });\n    }\n    ngOnChanges(changes) {\n        var _a, _b;\n        const { nzSize, nzSuffix, nzPrefix, nzPrefixIcon, nzSuffixIcon, nzAddOnAfter, nzAddOnBefore, nzAddOnAfterIcon, nzAddOnBeforeIcon, nzStatus } = changes;\n        if (nzSize) {\n            this.updateChildrenInputSize();\n            this.isLarge = this.nzSize === 'large';\n            this.isSmall = this.nzSize === 'small';\n        }\n        if (nzSuffix || nzPrefix || nzPrefixIcon || nzSuffixIcon) {\n            this.isAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n        }\n        if (nzAddOnAfter || nzAddOnBefore || nzAddOnAfterIcon || nzAddOnBeforeIcon) {\n            this.isAddOn = !!(this.nzAddOnAfter || this.nzAddOnBefore || this.nzAddOnAfterIcon || this.nzAddOnBeforeIcon);\n            (_b = (_a = this.nzFormNoStatusService) === null || _a === void 0 ? void 0 : _a.noFormStatus) === null || _b === void 0 ? void 0 : _b.next(this.isAddOn);\n        }\n        if (nzStatus) {\n            this.setStatusStyles(this.nzStatus, this.hasFeedback);\n        }\n    }\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setStatusStyles(status, hasFeedback) {\n        // set inner status\n        this.status = status;\n        this.hasFeedback = hasFeedback;\n        this.isFeedback = !!status && hasFeedback;\n        const baseAffix = !!(this.nzSuffix || this.nzPrefix || this.nzPrefixIcon || this.nzSuffixIcon);\n        this.isAffix = baseAffix || (!this.isAddOn && hasFeedback);\n        this.affixInGroupStatusCls =\n            this.isAffix || this.isFeedback\n                ? (this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, status, hasFeedback))\n                : {};\n        this.cdr.markForCheck();\n        // render status if nzStatus is set\n        this.affixStatusCls = getStatusClassNames(`${this.prefixCls}-affix-wrapper`, this.isAddOn ? '' : status, this.isAddOn ? false : hasFeedback);\n        this.groupStatusCls = getStatusClassNames(`${this.prefixCls}-group-wrapper`, this.isAddOn ? status : '', this.isAddOn ? hasFeedback : false);\n        const statusCls = Object.assign(Object.assign({}, this.affixStatusCls), this.groupStatusCls);\n        Object.keys(statusCls).forEach(status => {\n            if (statusCls[status]) {\n                this.renderer.addClass(this.elementRef.nativeElement, status);\n            }\n            else {\n                this.renderer.removeClass(this.elementRef.nativeElement, status);\n            }\n        });\n    }\n}\nNzInputGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupComponent, deps: [{ token: i1$1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: i3.NzFormStatusService, optional: true }, { token: i3.NzFormNoStatusService, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzInputGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzInputGroupComponent, selector: \"nz-input-group\", inputs: { nzAddOnBeforeIcon: \"nzAddOnBeforeIcon\", nzAddOnAfterIcon: \"nzAddOnAfterIcon\", nzPrefixIcon: \"nzPrefixIcon\", nzSuffixIcon: \"nzSuffixIcon\", nzAddOnBefore: \"nzAddOnBefore\", nzAddOnAfter: \"nzAddOnAfter\", nzPrefix: \"nzPrefix\", nzStatus: \"nzStatus\", nzSuffix: \"nzSuffix\", nzSize: \"nzSize\", nzSearch: \"nzSearch\", nzCompact: \"nzCompact\" }, host: { properties: { \"class.ant-input-group-compact\": \"nzCompact\", \"class.ant-input-search-enter-button\": \"nzSearch\", \"class.ant-input-search\": \"nzSearch\", \"class.ant-input-search-rtl\": \"dir === 'rtl'\", \"class.ant-input-search-sm\": \"nzSearch && isSmall\", \"class.ant-input-search-large\": \"nzSearch && isLarge\", \"class.ant-input-group-wrapper\": \"isAddOn\", \"class.ant-input-group-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-wrapper-lg\": \"isAddOn && isLarge\", \"class.ant-input-group-wrapper-sm\": \"isAddOn && isSmall\", \"class.ant-input-affix-wrapper\": \"isAffix && !isAddOn\", \"class.ant-input-affix-wrapper-rtl\": \"dir === 'rtl'\", \"class.ant-input-affix-wrapper-focused\": \"isAffix && focused\", \"class.ant-input-affix-wrapper-disabled\": \"isAffix && disabled\", \"class.ant-input-affix-wrapper-lg\": \"isAffix && !isAddOn && isLarge\", \"class.ant-input-affix-wrapper-sm\": \"isAffix && !isAddOn && isSmall\", \"class.ant-input-group\": \"!isAffix && !isAddOn\", \"class.ant-input-group-rtl\": \"dir === 'rtl'\", \"class.ant-input-group-lg\": \"!isAffix && !isAddOn && isLarge\", \"class.ant-input-group-sm\": \"!isAffix && !isAddOn && isSmall\" } }, providers: [NzFormNoStatusService], queries: [{ propertyName: \"listOfNzInputDirective\", predicate: NzInputDirective }], exportAs: [\"nzInputGroup\"], usesOnChanges: true, ngImport: i0, template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `, isInline: true, components: [{ type: NzInputGroupSlotComponent, selector: \"[nz-input-group-slot]\", inputs: [\"icon\", \"type\", \"template\"] }, { type: i3.NzFormItemFeedbackIconComponent, selector: \"nz-form-item-feedback-icon\", inputs: [\"status\"], exportAs: [\"nzFormFeedbackIcon\"] }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzSearch\", void 0);\n__decorate([\n    InputBoolean()\n], NzInputGroupComponent.prototype, \"nzCompact\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputGroupComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-input-group',\n                    exportAs: 'nzInputGroup',\n                    preserveWhitespaces: false,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [NzFormNoStatusService],\n                    template: `\n    <span class=\"ant-input-wrapper ant-input-group\" *ngIf=\"isAddOn; else noAddOnTemplate\">\n      <span\n        *ngIf=\"nzAddOnBefore || nzAddOnBeforeIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnBeforeIcon\"\n        [template]=\"nzAddOnBefore\"\n      ></span>\n      <span\n        *ngIf=\"isAffix || hasFeedback; else contentTemplate\"\n        class=\"ant-input-affix-wrapper\"\n        [class.ant-input-affix-wrapper-disabled]=\"disabled\"\n        [class.ant-input-affix-wrapper-sm]=\"isSmall\"\n        [class.ant-input-affix-wrapper-lg]=\"isLarge\"\n        [class.ant-input-affix-wrapper-focused]=\"focused\"\n        [ngClass]=\"affixInGroupStatusCls\"\n      >\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </span>\n      <span\n        *ngIf=\"nzAddOnAfter || nzAddOnAfterIcon\"\n        nz-input-group-slot\n        type=\"addon\"\n        [icon]=\"nzAddOnAfterIcon\"\n        [template]=\"nzAddOnAfter\"\n      ></span>\n    </span>\n    <ng-template #noAddOnTemplate>\n      <ng-template [ngIf]=\"isAffix\" [ngIfElse]=\"contentTemplate\">\n        <ng-template [ngTemplateOutlet]=\"affixTemplate\"></ng-template>\n      </ng-template>\n    </ng-template>\n    <ng-template #affixTemplate>\n      <span\n        *ngIf=\"nzPrefix || nzPrefixIcon\"\n        nz-input-group-slot\n        type=\"prefix\"\n        [icon]=\"nzPrefixIcon\"\n        [template]=\"nzPrefix\"\n      ></span>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate\"></ng-template>\n      <span\n        *ngIf=\"nzSuffix || nzSuffixIcon || isFeedback\"\n        nz-input-group-slot\n        type=\"suffix\"\n        [icon]=\"nzSuffixIcon\"\n        [template]=\"nzSuffix\"\n      >\n        <nz-form-item-feedback-icon *ngIf=\"isFeedback\" [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n    <ng-template #contentTemplate>\n      <ng-content></ng-content>\n      <span *ngIf=\"!isAddOn && !isAffix && isFeedback\" nz-input-group-slot type=\"suffix\">\n        <nz-form-item-feedback-icon [status]=\"status\"></nz-form-item-feedback-icon>\n      </span>\n    </ng-template>\n  `,\n                    host: {\n                        '[class.ant-input-group-compact]': `nzCompact`,\n                        '[class.ant-input-search-enter-button]': `nzSearch`,\n                        '[class.ant-input-search]': `nzSearch`,\n                        '[class.ant-input-search-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-search-sm]': `nzSearch && isSmall`,\n                        '[class.ant-input-search-large]': `nzSearch && isLarge`,\n                        '[class.ant-input-group-wrapper]': `isAddOn`,\n                        '[class.ant-input-group-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-wrapper-lg]': `isAddOn && isLarge`,\n                        '[class.ant-input-group-wrapper-sm]': `isAddOn && isSmall`,\n                        '[class.ant-input-affix-wrapper]': `isAffix && !isAddOn`,\n                        '[class.ant-input-affix-wrapper-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-affix-wrapper-focused]': `isAffix && focused`,\n                        '[class.ant-input-affix-wrapper-disabled]': `isAffix && disabled`,\n                        '[class.ant-input-affix-wrapper-lg]': `isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-affix-wrapper-sm]': `isAffix && !isAddOn && isSmall`,\n                        '[class.ant-input-group]': `!isAffix && !isAddOn`,\n                        '[class.ant-input-group-rtl]': `dir === 'rtl'`,\n                        '[class.ant-input-group-lg]': `!isAffix && !isAddOn && isLarge`,\n                        '[class.ant-input-group-sm]': `!isAffix && !isAddOn && isSmall`\n                    }\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzFormStatusService, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.NzFormNoStatusService, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { listOfNzInputDirective: [{\n                type: ContentChildren,\n                args: [NzInputDirective]\n            }], nzAddOnBeforeIcon: [{\n                type: Input\n            }], nzAddOnAfterIcon: [{\n                type: Input\n            }], nzPrefixIcon: [{\n                type: Input\n            }], nzSuffixIcon: [{\n                type: Input\n            }], nzAddOnBefore: [{\n                type: Input\n            }], nzAddOnAfter: [{\n                type: Input\n            }], nzPrefix: [{\n                type: Input\n            }], nzStatus: [{\n                type: Input\n            }], nzSuffix: [{\n                type: Input\n            }], nzSize: [{\n                type: Input\n            }], nzSearch: [{\n                type: Input\n            }], nzCompact: [{\n                type: Input\n            }] } });\n\nclass NzAutosizeDirective {\n    constructor(elementRef, ngZone, platform, resizeService) {\n        this.elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.platform = platform;\n        this.resizeService = resizeService;\n        this.autosize = false;\n        this.el = this.elementRef.nativeElement;\n        this.maxHeight = null;\n        this.minHeight = null;\n        this.destroy$ = new Subject();\n        this.inputGap = 10;\n    }\n    set nzAutosize(value) {\n        const isAutoSizeType = (data) => typeof data !== 'string' && typeof data !== 'boolean' && (!!data.maxRows || !!data.minRows);\n        if (typeof value === 'string' || value === true) {\n            this.autosize = true;\n        }\n        else if (isAutoSizeType(value)) {\n            this.autosize = true;\n            this.minRows = value.minRows;\n            this.maxRows = value.maxRows;\n            this.maxHeight = this.setMaxHeight();\n            this.minHeight = this.setMinHeight();\n        }\n    }\n    resizeToFitContent(force = false) {\n        this.cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this.cachedLineHeight) {\n            return;\n        }\n        const textarea = this.el;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this.minRows === this.previousMinRows && value === this.previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('nz-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        let height = Math.round((textarea.scrollHeight - this.inputGap) / this.cachedLineHeight) * this.cachedLineHeight +\n            this.inputGap;\n        if (this.maxHeight !== null && height > this.maxHeight) {\n            height = this.maxHeight;\n        }\n        if (this.minHeight !== null && height < this.minHeight) {\n            height = this.minHeight;\n        }\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('nz-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        // On Firefox resizing the textarea will prevent it from scrolling to the caret position.\n        // We need to re-set the selection in order for it to scroll to the proper position.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this.ngZone.runOutsideAngular(() => requestAnimationFrame(() => {\n                const { selectionStart, selectionEnd } = textarea;\n                // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n                // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n                // between the time we requested the animation frame and when it was executed.\n                // Also note that we have to assert that the textarea is focused before we set the\n                // selection range. Setting the selection range on a non-focused textarea will cause\n                // it to receive focus on IE and Edge.\n                if (!this.destroy$.isStopped && document.activeElement === textarea) {\n                    textarea.setSelectionRange(selectionStart, selectionEnd);\n                }\n            }));\n        }\n        this.previousValue = value;\n        this.previousMinRows = this.minRows;\n    }\n    cacheTextareaLineHeight() {\n        if (this.cachedLineHeight >= 0 || !this.el.parentNode) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        const textareaClone = this.el.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this.el.parentNode.appendChild(textareaClone);\n        this.cachedLineHeight = textareaClone.clientHeight - this.inputGap;\n        this.el.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this.maxHeight = this.setMaxHeight();\n        this.minHeight = this.setMinHeight();\n    }\n    setMinHeight() {\n        const minHeight = this.minRows && this.cachedLineHeight ? this.minRows * this.cachedLineHeight + this.inputGap : null;\n        if (minHeight !== null) {\n            this.el.style.minHeight = `${minHeight}px`;\n        }\n        return minHeight;\n    }\n    setMaxHeight() {\n        const maxHeight = this.maxRows && this.cachedLineHeight ? this.maxRows * this.cachedLineHeight + this.inputGap : null;\n        if (maxHeight !== null) {\n            this.el.style.maxHeight = `${maxHeight}px`;\n        }\n        return maxHeight;\n    }\n    noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    ngAfterViewInit() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n            this.resizeService\n                .subscribe()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.resizeToFitContent(true));\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    ngDoCheck() {\n        if (this.autosize && this.platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n}\nNzAutosizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzAutosizeDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$2.Platform }, { token: i2$2.NzResizeService }], target: i0.ɵɵFactoryTarget.Directive });\nNzAutosizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzAutosizeDirective, selector: \"textarea[nzAutosize]\", inputs: { nzAutosize: \"nzAutosize\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"noopInputHandler()\" } }, exportAs: [\"nzAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzAutosizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[nzAutosize]',\n                    exportAs: 'nzAutosize',\n                    host: {\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        rows: '1',\n                        '(input)': 'noopInputHandler()'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$2.Platform }, { type: i2$2.NzResizeService }]; }, propDecorators: { nzAutosize: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzTextareaCountComponent {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.nzMaxCharacterCount = 0;\n        this.nzComputeCharacterCount = v => v.length;\n        this.nzFormatter = (c, m) => `${c}${m > 0 ? `/${m}` : ``}`;\n        this.configChange$ = new Subject();\n        this.destroy$ = new Subject();\n    }\n    ngAfterContentInit() {\n        if (!this.nzInputDirective && isDevMode()) {\n            throw new Error('[nz-textarea-count]: Could not find matching textarea[nz-input] child.');\n        }\n        if (this.nzInputDirective.ngControl) {\n            const valueChanges = this.nzInputDirective.ngControl.valueChanges || EMPTY;\n            merge(valueChanges, this.configChange$)\n                .pipe(takeUntil(this.destroy$), map(() => this.nzInputDirective.ngControl.value), startWith(this.nzInputDirective.ngControl.value))\n                .subscribe(value => {\n                this.setDataCount(value);\n            });\n        }\n    }\n    setDataCount(value) {\n        const inputValue = isNotNil(value) ? String(value) : '';\n        const currentCount = this.nzComputeCharacterCount(inputValue);\n        const dataCount = this.nzFormatter(currentCount, this.nzMaxCharacterCount);\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'data-count', dataCount);\n    }\n    ngOnDestroy() {\n        this.configChange$.complete();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNzTextareaCountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzTextareaCountComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNzTextareaCountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: NzTextareaCountComponent, selector: \"nz-textarea-count\", inputs: { nzMaxCharacterCount: \"nzMaxCharacterCount\", nzComputeCharacterCount: \"nzComputeCharacterCount\", nzFormatter: \"nzFormatter\" }, host: { classAttribute: \"ant-input-textarea-show-count\" }, queries: [{ propertyName: \"nzInputDirective\", first: true, predicate: NzInputDirective, descendants: true, static: true }], ngImport: i0, template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzTextareaCountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-textarea-count',\n                    template: ` <ng-content select=\"textarea[nz-input]\"></ng-content> `,\n                    host: {\n                        class: 'ant-input-textarea-show-count'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { nzInputDirective: [{\n                type: ContentChild,\n                args: [NzInputDirective, { static: true }]\n            }], nzMaxCharacterCount: [{\n                type: Input\n            }], nzComputeCharacterCount: [{\n                type: Input\n            }], nzFormatter: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzInputModule {\n}\nNzInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputModule, declarations: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupSlotComponent,\n        NzInputGroupWhitSuffixOrPrefixDirective], imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule], exports: [NzTextareaCountComponent,\n        NzInputDirective,\n        NzInputGroupComponent,\n        NzAutosizeDirective,\n        NzInputGroupWhitSuffixOrPrefixDirective] });\nNzInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputModule, imports: [[BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: NzInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupSlotComponent,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    exports: [\n                        NzTextareaCountComponent,\n                        NzInputDirective,\n                        NzInputGroupComponent,\n                        NzAutosizeDirective,\n                        NzInputGroupWhitSuffixOrPrefixDirective\n                    ],\n                    entryComponents: [NzFormItemFeedbackIconComponent],\n                    imports: [BidiModule, CommonModule, NzIconModule, PlatformModule, NzOutletModule, NzFormPatchModule]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzAutosizeDirective, NzInputDirective, NzInputGroupComponent, NzInputGroupSlotComponent, NzInputGroupWhitSuffixOrPrefixDirective, NzInputModule, NzTextareaCountComponent };\n"]},"metadata":{},"sourceType":"module"}